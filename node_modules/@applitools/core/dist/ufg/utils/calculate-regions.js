"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.calculateRegions = void 0;
const generate_safe_selectors_1 = require("../utils/generate-safe-selectors");
async function calculateRegions({ driver, elementReferencesToCalculate, elementReferenceToTarget, scrollRootElement, }) {
    var _a, _b;
    const elementReferences = [
        ...(elementReferenceToTarget ? [elementReferenceToTarget] : []),
        ...(scrollRootElement ? [scrollRootElement] : []),
        ...elementReferencesToCalculate,
    ];
    const { cleanupGeneratedSelectors, selectors } = await (0, generate_safe_selectors_1.generateSafeSelectors)({
        context: driver.currentContext,
        elementReferences,
    });
    let selectorsToCalculate = selectors;
    let regionToTarget;
    let scrollRootSelector;
    if (elementReferenceToTarget) {
        if (!((_a = selectorsToCalculate[0]) === null || _a === void 0 ? void 0 : _a.safeSelector))
            throw new Error('Target element not found');
        regionToTarget = selectorsToCalculate[0].safeSelector;
        selectorsToCalculate = selectorsToCalculate.slice(1);
    }
    if (scrollRootElement) {
        scrollRootSelector = (_b = selectorsToCalculate[0].safeSelector) !== null && _b !== void 0 ? _b : undefined;
        selectorsToCalculate = selectorsToCalculate.slice(1);
    }
    return { cleanupGeneratedSelectors, selectorsToCalculate, regionToTarget, scrollRootSelector };
}
exports.calculateRegions = calculateRegions;
