import type { SpecType, Driver, ElementReference } from '@applitools/driver';
export type CalculateRegionsOptions = {
    elementReferencesToCalculate: ElementReference<SpecType>[];
    elementReferenceToTarget?: ElementReference<SpecType>;
    scrollRootElement?: ElementReference<SpecType>;
};
export declare function calculateRegions<TSpec extends SpecType>({ driver, elementReferencesToCalculate, elementReferenceToTarget, scrollRootElement, }: {
    driver: Driver<TSpec>;
} & CalculateRegionsOptions): Promise<{
    cleanupGeneratedSelectors: () => Promise<void>;
    selectorsToCalculate: ({
        safeSelector: null;
        originalSelector: null;
        elementReference: ElementReference<TSpec>;
    } | {
        safeSelector: import("@applitools/driver").CommonSelector;
        originalSelector: import("@applitools/driver").CommonSelector | null;
        elementReference: ElementReference<TSpec>;
    })[];
    regionToTarget: import("@applitools/driver").CommonSelector | undefined;
    scrollRootSelector: import("@applitools/driver").CommonSelector | undefined;
}>;
