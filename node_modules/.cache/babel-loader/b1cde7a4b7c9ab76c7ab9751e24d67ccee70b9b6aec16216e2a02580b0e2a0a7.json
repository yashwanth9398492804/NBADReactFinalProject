{"ast":null,"code":"import * as testUtils from 'react-dom/test-utils';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as ReactDOMClient from 'react-dom/client';\nimport { fireEvent as fireEvent$1, configure, prettyDOM, getQueriesForElement } from '@testing-library/dom';\nexport * from '@testing-library/dom';\nconst domAct = testUtils.act;\nfunction getGlobalThis() {\n  /* istanbul ignore else */\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  /* istanbul ignore next */\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  /* istanbul ignore next */\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  /* istanbul ignore next */\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  /* istanbul ignore next */\n  throw new Error('unable to locate global object');\n}\nfunction setIsReactActEnvironment(isReactActEnvironment) {\n  getGlobalThis().IS_REACT_ACT_ENVIRONMENT = isReactActEnvironment;\n}\nfunction getIsReactActEnvironment() {\n  return getGlobalThis().IS_REACT_ACT_ENVIRONMENT;\n}\nfunction withGlobalActEnvironment(actImplementation) {\n  return callback => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(true);\n    try {\n      // The return value of `act` is always a thenable.\n      let callbackNeedsToBeAwaited = false;\n      const actResult = actImplementation(() => {\n        const result = callback();\n        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n          callbackNeedsToBeAwaited = true;\n        }\n        return result;\n      });\n      if (callbackNeedsToBeAwaited) {\n        const thenable = actResult;\n        return {\n          then: (resolve, reject) => {\n            thenable.then(returnValue => {\n              setIsReactActEnvironment(previousActEnvironment);\n              resolve(returnValue);\n            }, error => {\n              setIsReactActEnvironment(previousActEnvironment);\n              reject(error);\n            });\n          }\n        };\n      } else {\n        setIsReactActEnvironment(previousActEnvironment);\n        return actResult;\n      }\n    } catch (error) {\n      // Can't be a `finally {}` block since we don't know if we have to immediately restore IS_REACT_ACT_ENVIRONMENT\n      // or if we have to await the callback first.\n      setIsReactActEnvironment(previousActEnvironment);\n      throw error;\n    }\n  };\n}\nconst act = withGlobalActEnvironment(domAct);\n\n/* eslint no-console:0 */\n\n// react-testing-library's version of fireEvent will call\n// dom-testing-library's version of fireEvent. The reason\n// we make this distinction however is because we have\n// a few extra events that work a bit differently\nconst fireEvent = function () {\n  return fireEvent$1(...arguments);\n};\nObject.keys(fireEvent$1).forEach(key => {\n  fireEvent[key] = function () {\n    return fireEvent$1[key](...arguments);\n  };\n});\n\n// React event system tracks native mouseOver/mouseOut events for\n// running onMouseEnter/onMouseLeave handlers\n// @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/EnterLeaveEventPlugin.js#L24-L31\nconst mouseEnter = fireEvent.mouseEnter;\nconst mouseLeave = fireEvent.mouseLeave;\nfireEvent.mouseEnter = function () {\n  mouseEnter(...arguments);\n  return fireEvent.mouseOver(...arguments);\n};\nfireEvent.mouseLeave = function () {\n  mouseLeave(...arguments);\n  return fireEvent.mouseOut(...arguments);\n};\nconst pointerEnter = fireEvent.pointerEnter;\nconst pointerLeave = fireEvent.pointerLeave;\nfireEvent.pointerEnter = function () {\n  pointerEnter(...arguments);\n  return fireEvent.pointerOver(...arguments);\n};\nfireEvent.pointerLeave = function () {\n  pointerLeave(...arguments);\n  return fireEvent.pointerOut(...arguments);\n};\nconst select = fireEvent.select;\nfireEvent.select = (node, init) => {\n  select(node, init);\n  // React tracks this event only on focused inputs\n  node.focus();\n\n  // React creates this event when one of the following native events happens\n  // - contextMenu\n  // - mouseUp\n  // - dragEnd\n  // - keyUp\n  // - keyDown\n  // so we can use any here\n  // @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/SelectEventPlugin.js#L203-L224\n  fireEvent.keyUp(node, init);\n};\n\n// React event system tracks native focusout/focusin events for\n// running blur/focus handlers\n// @link https://github.com/facebook/react/pull/19186\nconst blur = fireEvent.blur;\nconst focus = fireEvent.focus;\nfireEvent.blur = function () {\n  fireEvent.focusOut(...arguments);\n  return blur(...arguments);\n};\nfireEvent.focus = function () {\n  fireEvent.focusIn(...arguments);\n  return focus(...arguments);\n};\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (\n      // legacy timers\n      setTimeout._isMockFunction === true ||\n      // modern timers\n      // eslint-disable-next-line prefer-object-has-own -- No Object.hasOwn in all target environments we support.\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  } // istanbul ignore next\n\n  return false;\n}\nconfigure({\n  unstable_advanceTimersWrapper: cb => {\n    return act(cb);\n  },\n  // We just want to run `waitFor` without IS_REACT_ACT_ENVIRONMENT\n  // But that's not necessarily how `asyncWrapper` is used since it's a public method.\n  // Let's just hope nobody else is using it.\n  asyncWrapper: async cb => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(false);\n    try {\n      const result = await cb();\n      // Drain microtask queue.\n      // Otherwise we'll restore the previous act() environment, before we resolve the `waitFor` call.\n      // The caller would have no chance to wrap the in-flight Promises in `act()`\n      await new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n        }, 0);\n        if (jestFakeTimersAreEnabled()) {\n          jest.advanceTimersByTime(0);\n        }\n      });\n      return result;\n    } finally {\n      setIsReactActEnvironment(previousActEnvironment);\n    }\n  },\n  eventWrapper: cb => {\n    let result;\n    act(() => {\n      result = cb();\n    });\n    return result;\n  }\n});\n\n// Ideally we'd just use a WeakMap where containers are keys and roots are values.\n// We use two variables so that we can bail out in constant time when we render with a new container (most common use case)\n/**\n * @type {Set<import('react-dom').Container>}\n */\nconst mountedContainers = new Set();\n/**\n * @type Array<{container: import('react-dom').Container, root: ReturnType<typeof createConcurrentRoot>}>\n */\nconst mountedRootEntries = [];\nfunction createConcurrentRoot(container, _ref) {\n  let {\n    hydrate,\n    ui,\n    wrapper: WrapperComponent\n  } = _ref;\n  let root;\n  if (hydrate) {\n    act(() => {\n      root = ReactDOMClient.hydrateRoot(container, WrapperComponent ? /*#__PURE__*/React.createElement(WrapperComponent, null, ui) : ui);\n    });\n  } else {\n    root = ReactDOMClient.createRoot(container);\n  }\n  return {\n    hydrate() {\n      /* istanbul ignore if */\n      if (!hydrate) {\n        throw new Error('Attempted to hydrate a non-hydrateable root. This is a bug in `@testing-library/react`.');\n      }\n      // Nothing to do since hydration happens when creating the root object.\n    },\n\n    render(element) {\n      root.render(element);\n    },\n    unmount() {\n      root.unmount();\n    }\n  };\n}\nfunction createLegacyRoot(container) {\n  return {\n    hydrate(element) {\n      ReactDOM.hydrate(element, container);\n    },\n    render(element) {\n      ReactDOM.render(element, container);\n    },\n    unmount() {\n      ReactDOM.unmountComponentAtNode(container);\n    }\n  };\n}\nfunction renderRoot(ui, _ref2) {\n  let {\n    baseElement,\n    container,\n    hydrate,\n    queries,\n    root,\n    wrapper: WrapperComponent\n  } = _ref2;\n  const wrapUiIfNeeded = innerElement => WrapperComponent ? /*#__PURE__*/React.createElement(WrapperComponent, null, innerElement) : innerElement;\n  act(() => {\n    if (hydrate) {\n      root.hydrate(wrapUiIfNeeded(ui), container);\n    } else {\n      root.render(wrapUiIfNeeded(ui), container);\n    }\n  });\n  return {\n    container,\n    baseElement,\n    debug: function (el, maxLength, options) {\n      if (el === void 0) {\n        el = baseElement;\n      }\n      return Array.isArray(el) ?\n      // eslint-disable-next-line no-console\n      el.forEach(e => console.log(prettyDOM(e, maxLength, options))) :\n      // eslint-disable-next-line no-console,\n      console.log(prettyDOM(el, maxLength, options));\n    },\n    unmount: () => {\n      act(() => {\n        root.unmount();\n      });\n    },\n    rerender: rerenderUi => {\n      renderRoot(wrapUiIfNeeded(rerenderUi), {\n        container,\n        baseElement,\n        root\n      });\n      // Intentionally do not return anything to avoid unnecessarily complicating the API.\n      // folks can use all the same utilities we return in the first place that are bound to the container\n    },\n\n    asFragment: () => {\n      /* istanbul ignore else (old jsdom limitation) */\n      if (typeof document.createRange === 'function') {\n        return document.createRange().createContextualFragment(container.innerHTML);\n      } else {\n        const template = document.createElement('template');\n        template.innerHTML = container.innerHTML;\n        return template.content;\n      }\n    },\n    ...getQueriesForElement(baseElement, queries)\n  };\n}\nfunction render(ui, _temp) {\n  let {\n    container,\n    baseElement = container,\n    legacyRoot = false,\n    queries,\n    hydrate = false,\n    wrapper\n  } = _temp === void 0 ? {} : _temp;\n  if (!baseElement) {\n    // default to document.body instead of documentElement to avoid output of potentially-large\n    // head elements (such as JSS style blocks) in debug output\n    baseElement = document.body;\n  }\n  if (!container) {\n    container = baseElement.appendChild(document.createElement('div'));\n  }\n  let root;\n  // eslint-disable-next-line no-negated-condition -- we want to map the evolution of this over time. The root is created first. Only later is it re-used so we don't want to read the case that happens later first.\n  if (!mountedContainers.has(container)) {\n    const createRootImpl = legacyRoot ? createLegacyRoot : createConcurrentRoot;\n    root = createRootImpl(container, {\n      hydrate,\n      ui,\n      wrapper\n    });\n    mountedRootEntries.push({\n      container,\n      root\n    });\n    // we'll add it to the mounted containers regardless of whether it's actually\n    // added to document.body so the cleanup method works regardless of whether\n    // they're passing us a custom container or not.\n    mountedContainers.add(container);\n  } else {\n    mountedRootEntries.forEach(rootEntry => {\n      // Else is unreachable since `mountedContainers` has the `container`.\n      // Only reachable if one would accidentally add the container to `mountedContainers` but not the root to `mountedRootEntries`\n      /* istanbul ignore else */\n      if (rootEntry.container === container) {\n        root = rootEntry.root;\n      }\n    });\n  }\n  return renderRoot(ui, {\n    container,\n    baseElement,\n    queries,\n    hydrate,\n    wrapper,\n    root\n  });\n}\nfunction cleanup() {\n  mountedRootEntries.forEach(_ref3 => {\n    let {\n      root,\n      container\n    } = _ref3;\n    act(() => {\n      root.unmount();\n    });\n    if (container.parentNode === document.body) {\n      document.body.removeChild(container);\n    }\n  });\n  mountedRootEntries.length = 0;\n  mountedContainers.clear();\n}\nfunction renderHook(renderCallback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    initialProps,\n    ...renderOptions\n  } = options;\n  const result = /*#__PURE__*/React.createRef();\n  function TestComponent(_ref4) {\n    let {\n      renderCallbackProps\n    } = _ref4;\n    const pendingResult = renderCallback(renderCallbackProps);\n    React.useEffect(() => {\n      result.current = pendingResult;\n    });\n    return null;\n  }\n  const {\n    rerender: baseRerender,\n    unmount\n  } = render( /*#__PURE__*/React.createElement(TestComponent, {\n    renderCallbackProps: initialProps\n  }), renderOptions);\n  function rerender(rerenderCallbackProps) {\n    return baseRerender( /*#__PURE__*/React.createElement(TestComponent, {\n      renderCallbackProps: rerenderCallbackProps\n    }));\n  }\n  return {\n    result,\n    rerender,\n    unmount\n  };\n}\n\n/* eslint func-name-matching:0 */\n\n// if we're running in a test runner that supports afterEach\n// or teardown then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this then either import the `pure` module\n// or set the RTL_SKIP_AUTO_CLEANUP env variable to 'true'.\nif (typeof process === 'undefined' || !process.env?.RTL_SKIP_AUTO_CLEANUP) {\n  // ignore teardown() in code coverage because Jest does not support it\n  /* istanbul ignore else */\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      cleanup();\n    });\n  } else if (typeof teardown === 'function') {\n    // Block is guarded by `typeof` check.\n    // eslint does not support `typeof` guards.\n    // eslint-disable-next-line no-undef\n    teardown(() => {\n      cleanup();\n    });\n  }\n\n  // No test setup with other test runners available\n  /* istanbul ignore else */\n  if (typeof beforeAll === 'function' && typeof afterAll === 'function') {\n    // This matches the behavior of React < 18.\n    let previousIsReactActEnvironment = getIsReactActEnvironment();\n    beforeAll(() => {\n      previousIsReactActEnvironment = getIsReactActEnvironment();\n      setIsReactActEnvironment(true);\n    });\n    afterAll(() => {\n      setIsReactActEnvironment(previousIsReactActEnvironment);\n    });\n  }\n}\nexport { act, cleanup, fireEvent, render, renderHook };","map":{"version":3,"names":["testUtils","React","ReactDOM","ReactDOMClient","fireEvent","fireEvent$1","configure","prettyDOM","getQueriesForElement","domAct","act","getGlobalThis","globalThis","self","window","global","Error","setIsReactActEnvironment","isReactActEnvironment","IS_REACT_ACT_ENVIRONMENT","getIsReactActEnvironment","withGlobalActEnvironment","actImplementation","callback","previousActEnvironment","callbackNeedsToBeAwaited","actResult","result","then","thenable","resolve","reject","returnValue","error","arguments","Object","keys","forEach","key","mouseEnter","mouseLeave","mouseOver","mouseOut","pointerEnter","pointerLeave","pointerOver","pointerOut","select","node","init","focus","keyUp","blur","focusOut","focusIn","jestFakeTimersAreEnabled","jest","setTimeout","_isMockFunction","prototype","hasOwnProperty","call","unstable_advanceTimersWrapper","cb","asyncWrapper","Promise","advanceTimersByTime","eventWrapper","mountedContainers","Set","mountedRootEntries","createConcurrentRoot","container","_ref","hydrate","ui","wrapper","WrapperComponent","root","hydrateRoot","createElement","createRoot","render","element","unmount","createLegacyRoot","unmountComponentAtNode","renderRoot","_ref2","baseElement","queries","wrapUiIfNeeded","innerElement","debug","el","maxLength","options","Array","isArray","e","console","log","rerender","rerenderUi","asFragment","document","createRange","createContextualFragment","innerHTML","template","content","_temp","legacyRoot","body","appendChild","has","createRootImpl","push","add","rootEntry","cleanup","_ref3","parentNode","removeChild","length","clear","renderHook","renderCallback","initialProps","renderOptions","createRef","TestComponent","_ref4","renderCallbackProps","pendingResult","useEffect","current","baseRerender","rerenderCallbackProps","process","env","RTL_SKIP_AUTO_CLEANUP","afterEach","teardown","beforeAll","afterAll","previousIsReactActEnvironment"],"sources":["C:/NBAD/Y1/node_modules/@testing-library/react/dist/@testing-library/react.esm.js"],"sourcesContent":["import * as testUtils from 'react-dom/test-utils';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as ReactDOMClient from 'react-dom/client';\nimport { fireEvent as fireEvent$1, configure, prettyDOM, getQueriesForElement } from '@testing-library/dom';\nexport * from '@testing-library/dom';\n\nconst domAct = testUtils.act;\nfunction getGlobalThis() {\n  /* istanbul ignore else */\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  /* istanbul ignore next */\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  /* istanbul ignore next */\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  /* istanbul ignore next */\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  /* istanbul ignore next */\n  throw new Error('unable to locate global object');\n}\nfunction setIsReactActEnvironment(isReactActEnvironment) {\n  getGlobalThis().IS_REACT_ACT_ENVIRONMENT = isReactActEnvironment;\n}\nfunction getIsReactActEnvironment() {\n  return getGlobalThis().IS_REACT_ACT_ENVIRONMENT;\n}\nfunction withGlobalActEnvironment(actImplementation) {\n  return callback => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(true);\n    try {\n      // The return value of `act` is always a thenable.\n      let callbackNeedsToBeAwaited = false;\n      const actResult = actImplementation(() => {\n        const result = callback();\n        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n          callbackNeedsToBeAwaited = true;\n        }\n        return result;\n      });\n      if (callbackNeedsToBeAwaited) {\n        const thenable = actResult;\n        return {\n          then: (resolve, reject) => {\n            thenable.then(returnValue => {\n              setIsReactActEnvironment(previousActEnvironment);\n              resolve(returnValue);\n            }, error => {\n              setIsReactActEnvironment(previousActEnvironment);\n              reject(error);\n            });\n          }\n        };\n      } else {\n        setIsReactActEnvironment(previousActEnvironment);\n        return actResult;\n      }\n    } catch (error) {\n      // Can't be a `finally {}` block since we don't know if we have to immediately restore IS_REACT_ACT_ENVIRONMENT\n      // or if we have to await the callback first.\n      setIsReactActEnvironment(previousActEnvironment);\n      throw error;\n    }\n  };\n}\nconst act = withGlobalActEnvironment(domAct);\n\n/* eslint no-console:0 */\n\n// react-testing-library's version of fireEvent will call\n// dom-testing-library's version of fireEvent. The reason\n// we make this distinction however is because we have\n// a few extra events that work a bit differently\nconst fireEvent = function () {\n  return fireEvent$1(...arguments);\n};\nObject.keys(fireEvent$1).forEach(key => {\n  fireEvent[key] = function () {\n    return fireEvent$1[key](...arguments);\n  };\n});\n\n// React event system tracks native mouseOver/mouseOut events for\n// running onMouseEnter/onMouseLeave handlers\n// @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/EnterLeaveEventPlugin.js#L24-L31\nconst mouseEnter = fireEvent.mouseEnter;\nconst mouseLeave = fireEvent.mouseLeave;\nfireEvent.mouseEnter = function () {\n  mouseEnter(...arguments);\n  return fireEvent.mouseOver(...arguments);\n};\nfireEvent.mouseLeave = function () {\n  mouseLeave(...arguments);\n  return fireEvent.mouseOut(...arguments);\n};\nconst pointerEnter = fireEvent.pointerEnter;\nconst pointerLeave = fireEvent.pointerLeave;\nfireEvent.pointerEnter = function () {\n  pointerEnter(...arguments);\n  return fireEvent.pointerOver(...arguments);\n};\nfireEvent.pointerLeave = function () {\n  pointerLeave(...arguments);\n  return fireEvent.pointerOut(...arguments);\n};\nconst select = fireEvent.select;\nfireEvent.select = (node, init) => {\n  select(node, init);\n  // React tracks this event only on focused inputs\n  node.focus();\n\n  // React creates this event when one of the following native events happens\n  // - contextMenu\n  // - mouseUp\n  // - dragEnd\n  // - keyUp\n  // - keyDown\n  // so we can use any here\n  // @link https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/events/SelectEventPlugin.js#L203-L224\n  fireEvent.keyUp(node, init);\n};\n\n// React event system tracks native focusout/focusin events for\n// running blur/focus handlers\n// @link https://github.com/facebook/react/pull/19186\nconst blur = fireEvent.blur;\nconst focus = fireEvent.focus;\nfireEvent.blur = function () {\n  fireEvent.focusOut(...arguments);\n  return blur(...arguments);\n};\nfireEvent.focus = function () {\n  fireEvent.focusIn(...arguments);\n  return focus(...arguments);\n};\n\nfunction jestFakeTimersAreEnabled() {\n  /* istanbul ignore else */\n  if (typeof jest !== 'undefined' && jest !== null) {\n    return (\n      // legacy timers\n      setTimeout._isMockFunction === true ||\n      // modern timers\n      // eslint-disable-next-line prefer-object-has-own -- No Object.hasOwn in all target environments we support.\n      Object.prototype.hasOwnProperty.call(setTimeout, 'clock')\n    );\n  } // istanbul ignore next\n\n  return false;\n}\nconfigure({\n  unstable_advanceTimersWrapper: cb => {\n    return act(cb);\n  },\n  // We just want to run `waitFor` without IS_REACT_ACT_ENVIRONMENT\n  // But that's not necessarily how `asyncWrapper` is used since it's a public method.\n  // Let's just hope nobody else is using it.\n  asyncWrapper: async cb => {\n    const previousActEnvironment = getIsReactActEnvironment();\n    setIsReactActEnvironment(false);\n    try {\n      const result = await cb();\n      // Drain microtask queue.\n      // Otherwise we'll restore the previous act() environment, before we resolve the `waitFor` call.\n      // The caller would have no chance to wrap the in-flight Promises in `act()`\n      await new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n        }, 0);\n        if (jestFakeTimersAreEnabled()) {\n          jest.advanceTimersByTime(0);\n        }\n      });\n      return result;\n    } finally {\n      setIsReactActEnvironment(previousActEnvironment);\n    }\n  },\n  eventWrapper: cb => {\n    let result;\n    act(() => {\n      result = cb();\n    });\n    return result;\n  }\n});\n\n// Ideally we'd just use a WeakMap where containers are keys and roots are values.\n// We use two variables so that we can bail out in constant time when we render with a new container (most common use case)\n/**\n * @type {Set<import('react-dom').Container>}\n */\nconst mountedContainers = new Set();\n/**\n * @type Array<{container: import('react-dom').Container, root: ReturnType<typeof createConcurrentRoot>}>\n */\nconst mountedRootEntries = [];\nfunction createConcurrentRoot(container, _ref) {\n  let {\n    hydrate,\n    ui,\n    wrapper: WrapperComponent\n  } = _ref;\n  let root;\n  if (hydrate) {\n    act(() => {\n      root = ReactDOMClient.hydrateRoot(container, WrapperComponent ? /*#__PURE__*/React.createElement(WrapperComponent, null, ui) : ui);\n    });\n  } else {\n    root = ReactDOMClient.createRoot(container);\n  }\n  return {\n    hydrate() {\n      /* istanbul ignore if */\n      if (!hydrate) {\n        throw new Error('Attempted to hydrate a non-hydrateable root. This is a bug in `@testing-library/react`.');\n      }\n      // Nothing to do since hydration happens when creating the root object.\n    },\n\n    render(element) {\n      root.render(element);\n    },\n    unmount() {\n      root.unmount();\n    }\n  };\n}\nfunction createLegacyRoot(container) {\n  return {\n    hydrate(element) {\n      ReactDOM.hydrate(element, container);\n    },\n    render(element) {\n      ReactDOM.render(element, container);\n    },\n    unmount() {\n      ReactDOM.unmountComponentAtNode(container);\n    }\n  };\n}\nfunction renderRoot(ui, _ref2) {\n  let {\n    baseElement,\n    container,\n    hydrate,\n    queries,\n    root,\n    wrapper: WrapperComponent\n  } = _ref2;\n  const wrapUiIfNeeded = innerElement => WrapperComponent ? /*#__PURE__*/React.createElement(WrapperComponent, null, innerElement) : innerElement;\n  act(() => {\n    if (hydrate) {\n      root.hydrate(wrapUiIfNeeded(ui), container);\n    } else {\n      root.render(wrapUiIfNeeded(ui), container);\n    }\n  });\n  return {\n    container,\n    baseElement,\n    debug: function (el, maxLength, options) {\n      if (el === void 0) {\n        el = baseElement;\n      }\n      return Array.isArray(el) ?\n      // eslint-disable-next-line no-console\n      el.forEach(e => console.log(prettyDOM(e, maxLength, options))) :\n      // eslint-disable-next-line no-console,\n      console.log(prettyDOM(el, maxLength, options));\n    },\n    unmount: () => {\n      act(() => {\n        root.unmount();\n      });\n    },\n    rerender: rerenderUi => {\n      renderRoot(wrapUiIfNeeded(rerenderUi), {\n        container,\n        baseElement,\n        root\n      });\n      // Intentionally do not return anything to avoid unnecessarily complicating the API.\n      // folks can use all the same utilities we return in the first place that are bound to the container\n    },\n\n    asFragment: () => {\n      /* istanbul ignore else (old jsdom limitation) */\n      if (typeof document.createRange === 'function') {\n        return document.createRange().createContextualFragment(container.innerHTML);\n      } else {\n        const template = document.createElement('template');\n        template.innerHTML = container.innerHTML;\n        return template.content;\n      }\n    },\n    ...getQueriesForElement(baseElement, queries)\n  };\n}\nfunction render(ui, _temp) {\n  let {\n    container,\n    baseElement = container,\n    legacyRoot = false,\n    queries,\n    hydrate = false,\n    wrapper\n  } = _temp === void 0 ? {} : _temp;\n  if (!baseElement) {\n    // default to document.body instead of documentElement to avoid output of potentially-large\n    // head elements (such as JSS style blocks) in debug output\n    baseElement = document.body;\n  }\n  if (!container) {\n    container = baseElement.appendChild(document.createElement('div'));\n  }\n  let root;\n  // eslint-disable-next-line no-negated-condition -- we want to map the evolution of this over time. The root is created first. Only later is it re-used so we don't want to read the case that happens later first.\n  if (!mountedContainers.has(container)) {\n    const createRootImpl = legacyRoot ? createLegacyRoot : createConcurrentRoot;\n    root = createRootImpl(container, {\n      hydrate,\n      ui,\n      wrapper\n    });\n    mountedRootEntries.push({\n      container,\n      root\n    });\n    // we'll add it to the mounted containers regardless of whether it's actually\n    // added to document.body so the cleanup method works regardless of whether\n    // they're passing us a custom container or not.\n    mountedContainers.add(container);\n  } else {\n    mountedRootEntries.forEach(rootEntry => {\n      // Else is unreachable since `mountedContainers` has the `container`.\n      // Only reachable if one would accidentally add the container to `mountedContainers` but not the root to `mountedRootEntries`\n      /* istanbul ignore else */\n      if (rootEntry.container === container) {\n        root = rootEntry.root;\n      }\n    });\n  }\n  return renderRoot(ui, {\n    container,\n    baseElement,\n    queries,\n    hydrate,\n    wrapper,\n    root\n  });\n}\nfunction cleanup() {\n  mountedRootEntries.forEach(_ref3 => {\n    let {\n      root,\n      container\n    } = _ref3;\n    act(() => {\n      root.unmount();\n    });\n    if (container.parentNode === document.body) {\n      document.body.removeChild(container);\n    }\n  });\n  mountedRootEntries.length = 0;\n  mountedContainers.clear();\n}\nfunction renderHook(renderCallback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    initialProps,\n    ...renderOptions\n  } = options;\n  const result = /*#__PURE__*/React.createRef();\n  function TestComponent(_ref4) {\n    let {\n      renderCallbackProps\n    } = _ref4;\n    const pendingResult = renderCallback(renderCallbackProps);\n    React.useEffect(() => {\n      result.current = pendingResult;\n    });\n    return null;\n  }\n  const {\n    rerender: baseRerender,\n    unmount\n  } = render( /*#__PURE__*/React.createElement(TestComponent, {\n    renderCallbackProps: initialProps\n  }), renderOptions);\n  function rerender(rerenderCallbackProps) {\n    return baseRerender( /*#__PURE__*/React.createElement(TestComponent, {\n      renderCallbackProps: rerenderCallbackProps\n    }));\n  }\n  return {\n    result,\n    rerender,\n    unmount\n  };\n}\n\n/* eslint func-name-matching:0 */\n\n// if we're running in a test runner that supports afterEach\n// or teardown then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this then either import the `pure` module\n// or set the RTL_SKIP_AUTO_CLEANUP env variable to 'true'.\nif (typeof process === 'undefined' || !process.env?.RTL_SKIP_AUTO_CLEANUP) {\n  // ignore teardown() in code coverage because Jest does not support it\n  /* istanbul ignore else */\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      cleanup();\n    });\n  } else if (typeof teardown === 'function') {\n    // Block is guarded by `typeof` check.\n    // eslint does not support `typeof` guards.\n    // eslint-disable-next-line no-undef\n    teardown(() => {\n      cleanup();\n    });\n  }\n\n  // No test setup with other test runners available\n  /* istanbul ignore else */\n  if (typeof beforeAll === 'function' && typeof afterAll === 'function') {\n    // This matches the behavior of React < 18.\n    let previousIsReactActEnvironment = getIsReactActEnvironment();\n    beforeAll(() => {\n      previousIsReactActEnvironment = getIsReactActEnvironment();\n      setIsReactActEnvironment(true);\n    });\n    afterAll(() => {\n      setIsReactActEnvironment(previousIsReactActEnvironment);\n    });\n  }\n}\n\nexport { act, cleanup, fireEvent, render, renderHook };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}