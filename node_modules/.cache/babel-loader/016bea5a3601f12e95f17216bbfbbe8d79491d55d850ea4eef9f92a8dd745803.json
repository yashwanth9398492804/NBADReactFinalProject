{"ast":null,"code":"import * as named from '@testing-library/dom';\nimport '../utils/click/isClickableInput.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport { isElementType } from '../utils/misc/isElementType.js';\nimport { isDisabled } from '../utils/misc/isDisabled.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport { hasPointerEvents } from '../utils/pointer/cssPointerEvents.js';\nimport '../event/behavior/click.js';\nimport '../event/behavior/cut.js';\nimport '../event/behavior/keydown.js';\nimport '../event/behavior/keypress.js';\nimport '../event/behavior/keyup.js';\nimport '../event/behavior/paste.js';\nimport '../event/eventMap.js';\nimport { focusElement } from '../event/focus.js';\nconst {\n  getConfig\n} = named;\nasync function selectOptions(select, values) {\n  return selectOptionsBase.call(this, true, select, values);\n}\nasync function deselectOptions(select, values) {\n  return selectOptionsBase.call(this, false, select, values);\n}\nasync function selectOptionsBase(newValue, select, values) {\n  if (!newValue && !select.multiple) {\n    throw getConfig().getElementError(`Unable to deselect an option in a non-multiple select. Use selectOptions to change the selection instead.`, select);\n  }\n  const valArray = Array.isArray(values) ? values : [values];\n  const allOptions = Array.from(select.querySelectorAll('option, [role=\"option\"]'));\n  const selectedOptions = valArray.map(val => {\n    if (typeof val !== 'string' && allOptions.includes(val)) {\n      return val;\n    } else {\n      const matchingOption = allOptions.find(o => o.value === val || o.innerHTML === val);\n      if (matchingOption) {\n        return matchingOption;\n      } else {\n        throw getConfig().getElementError(`Value \"${String(val)}\" not found in options`, select);\n      }\n    }\n  }).filter(option => !isDisabled(option));\n  if (isDisabled(select) || !selectedOptions.length) return;\n  const selectOption = option => {\n    option.selected = newValue;\n    this.dispatchUIEvent(select, 'input', {\n      bubbles: true,\n      cancelable: false,\n      composed: true\n    });\n    this.dispatchUIEvent(select, 'change');\n  };\n  if (isElementType(select, 'select')) {\n    if (select.multiple) {\n      for (const option of selectedOptions) {\n        const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, option);\n        // events fired for multiple select are weird. Can't use hover...\n        if (withPointerEvents) {\n          this.dispatchUIEvent(option, 'pointerover');\n          this.dispatchUIEvent(select, 'pointerenter');\n          this.dispatchUIEvent(option, 'mouseover');\n          this.dispatchUIEvent(select, 'mouseenter');\n          this.dispatchUIEvent(option, 'pointermove');\n          this.dispatchUIEvent(option, 'mousemove');\n          this.dispatchUIEvent(option, 'pointerdown');\n          this.dispatchUIEvent(option, 'mousedown');\n        }\n        focusElement(select);\n        if (withPointerEvents) {\n          this.dispatchUIEvent(option, 'pointerup');\n          this.dispatchUIEvent(option, 'mouseup');\n        }\n        selectOption(option);\n        if (withPointerEvents) {\n          this.dispatchUIEvent(option, 'click');\n        }\n        await wait(this.config);\n      }\n    } else if (selectedOptions.length === 1) {\n      const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, select);\n      // the click to open the select options\n      if (withPointerEvents) {\n        await this.click(select);\n      } else {\n        focusElement(select);\n      }\n      selectOption(selectedOptions[0]);\n      if (withPointerEvents) {\n        // the browser triggers another click event on the select for the click on the option\n        // this second click has no 'down' phase\n        this.dispatchUIEvent(select, 'pointerover');\n        this.dispatchUIEvent(select, 'pointerenter');\n        this.dispatchUIEvent(select, 'mouseover');\n        this.dispatchUIEvent(select, 'mouseenter');\n        this.dispatchUIEvent(select, 'pointerup');\n        this.dispatchUIEvent(select, 'mouseup');\n        this.dispatchUIEvent(select, 'click');\n      }\n      await wait(this.config);\n    } else {\n      throw getConfig().getElementError(`Cannot select multiple options on a non-multiple select`, select);\n    }\n  } else if (select.getAttribute('role') === 'listbox') {\n    for (const option of selectedOptions) {\n      await this.click(option);\n      await this.unhover(option);\n    }\n  } else {\n    throw getConfig().getElementError(`Cannot select options on elements that are neither select nor listbox elements`, select);\n  }\n}\nexport { deselectOptions, selectOptions };","map":{"version":3,"names":["named","isElementType","isDisabled","wait","hasPointerEvents","focusElement","getConfig","selectOptions","select","values","selectOptionsBase","call","deselectOptions","newValue","multiple","getElementError","valArray","Array","isArray","allOptions","from","querySelectorAll","selectedOptions","map","val","includes","matchingOption","find","o","value","innerHTML","String","filter","option","length","selectOption","selected","dispatchUIEvent","bubbles","cancelable","composed","withPointerEvents","config","pointerEventsCheck","click","getAttribute","unhover"],"sources":["C:/NBAD/Y1/node_modules/@testing-library/user-event/dist/esm/utility/selectOptions.js"],"sourcesContent":["import * as named from '@testing-library/dom';\nimport '../utils/click/isClickableInput.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport { isElementType } from '../utils/misc/isElementType.js';\nimport { isDisabled } from '../utils/misc/isDisabled.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport { hasPointerEvents } from '../utils/pointer/cssPointerEvents.js';\nimport '../event/behavior/click.js';\nimport '../event/behavior/cut.js';\nimport '../event/behavior/keydown.js';\nimport '../event/behavior/keypress.js';\nimport '../event/behavior/keyup.js';\nimport '../event/behavior/paste.js';\nimport '../event/eventMap.js';\nimport { focusElement } from '../event/focus.js';\n\nconst { getConfig } = named;\nasync function selectOptions(select, values) {\n    return selectOptionsBase.call(this, true, select, values);\n}\nasync function deselectOptions(select, values) {\n    return selectOptionsBase.call(this, false, select, values);\n}\nasync function selectOptionsBase(newValue, select, values) {\n    if (!newValue && !select.multiple) {\n        throw getConfig().getElementError(`Unable to deselect an option in a non-multiple select. Use selectOptions to change the selection instead.`, select);\n    }\n    const valArray = Array.isArray(values) ? values : [\n        values\n    ];\n    const allOptions = Array.from(select.querySelectorAll('option, [role=\"option\"]'));\n    const selectedOptions = valArray.map((val)=>{\n        if (typeof val !== 'string' && allOptions.includes(val)) {\n            return val;\n        } else {\n            const matchingOption = allOptions.find((o)=>o.value === val || o.innerHTML === val);\n            if (matchingOption) {\n                return matchingOption;\n            } else {\n                throw getConfig().getElementError(`Value \"${String(val)}\" not found in options`, select);\n            }\n        }\n    }).filter((option)=>!isDisabled(option));\n    if (isDisabled(select) || !selectedOptions.length) return;\n    const selectOption = (option)=>{\n        option.selected = newValue;\n        this.dispatchUIEvent(select, 'input', {\n            bubbles: true,\n            cancelable: false,\n            composed: true\n        });\n        this.dispatchUIEvent(select, 'change');\n    };\n    if (isElementType(select, 'select')) {\n        if (select.multiple) {\n            for (const option of selectedOptions){\n                const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, option);\n                // events fired for multiple select are weird. Can't use hover...\n                if (withPointerEvents) {\n                    this.dispatchUIEvent(option, 'pointerover');\n                    this.dispatchUIEvent(select, 'pointerenter');\n                    this.dispatchUIEvent(option, 'mouseover');\n                    this.dispatchUIEvent(select, 'mouseenter');\n                    this.dispatchUIEvent(option, 'pointermove');\n                    this.dispatchUIEvent(option, 'mousemove');\n                    this.dispatchUIEvent(option, 'pointerdown');\n                    this.dispatchUIEvent(option, 'mousedown');\n                }\n                focusElement(select);\n                if (withPointerEvents) {\n                    this.dispatchUIEvent(option, 'pointerup');\n                    this.dispatchUIEvent(option, 'mouseup');\n                }\n                selectOption(option);\n                if (withPointerEvents) {\n                    this.dispatchUIEvent(option, 'click');\n                }\n                await wait(this.config);\n            }\n        } else if (selectedOptions.length === 1) {\n            const withPointerEvents = this.config.pointerEventsCheck === 0 ? true : hasPointerEvents(this, select);\n            // the click to open the select options\n            if (withPointerEvents) {\n                await this.click(select);\n            } else {\n                focusElement(select);\n            }\n            selectOption(selectedOptions[0]);\n            if (withPointerEvents) {\n                // the browser triggers another click event on the select for the click on the option\n                // this second click has no 'down' phase\n                this.dispatchUIEvent(select, 'pointerover');\n                this.dispatchUIEvent(select, 'pointerenter');\n                this.dispatchUIEvent(select, 'mouseover');\n                this.dispatchUIEvent(select, 'mouseenter');\n                this.dispatchUIEvent(select, 'pointerup');\n                this.dispatchUIEvent(select, 'mouseup');\n                this.dispatchUIEvent(select, 'click');\n            }\n            await wait(this.config);\n        } else {\n            throw getConfig().getElementError(`Cannot select multiple options on a non-multiple select`, select);\n        }\n    } else if (select.getAttribute('role') === 'listbox') {\n        for (const option of selectedOptions){\n            await this.click(option);\n            await this.unhover(option);\n        }\n    } else {\n        throw getConfig().getElementError(`Cannot select options on elements that are neither select nor listbox elements`, select);\n    }\n}\n\nexport { deselectOptions, selectOptions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}