{"ast":null,"code":"var _jsxFileName = \"C:\\\\NBAD\\\\Y1\\\\src\\\\components\\\\Auth\\\\UserLogin.js\",\n  _s = $RefreshSig$();\n//Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport authService from '../services/authService';\nimport '../../styles/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserLogin = ({\n  onUserLogin\n}) => {\n  _s();\n  const [userUsername, setUserUsername] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\n  const [loginStatusMessage, setLoginStatusMessage] = useState('');\n  const navigate = useNavigate();\n  const handleUserLogin = async () => {\n    try {\n      const token = await authService.userLogin(userUsername, userPassword);\n\n      // Pass the user token and username to the onUserLogin callback\n      onUserLogin(token, userUsername);\n      setLoginStatusMessage('Login successful');\n      openLoginModal();\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('User login failed', error);\n      setLoginStatusMessage('Login failed. Please check your username and password.');\n      openLoginModal();\n    }\n  };\n  const openLoginModal = () => {\n    setIsLoginModalOpen(true);\n  };\n  const closeLoginModal = () => {\n    setIsLoginModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-heading\",\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login-input\",\n      type: \"text\",\n      placeholder: \"Username\",\n      value: userUsername,\n      onChange: e => setUserUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login-input\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: userPassword,\n      onChange: e => setUserPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button\",\n      onClick: handleUserLogin,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isLoginModalOpen,\n      onRequestClose: closeLoginModal,\n      contentLabel: \"Login Status Message\",\n      className: \"login-modal\",\n      style: {\n        overlay: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: loginStatusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: closeLoginModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UserLogin, \"HZp21acVj7o7wf1x0fonbY/7H1o=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLogin;\nexport default UserLogin;\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["React","useState","useNavigate","Modal","authService","jsxDEV","_jsxDEV","UserLogin","onUserLogin","_s","userUsername","setUserUsername","userPassword","setUserPassword","isLoginModalOpen","setIsLoginModalOpen","loginStatusMessage","setLoginStatusMessage","navigate","handleUserLogin","token","userLogin","openLoginModal","error","console","closeLoginModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","isOpen","onRequestClose","contentLabel","style","overlay","display","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["C:/NBAD/Y1/src/components/Auth/UserLogin.js"],"sourcesContent":["//Login.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport authService from '../services/authService';\r\nimport '../../styles/login.css';\r\n\r\nconst UserLogin = ({ onUserLogin }) => {\r\n  const [userUsername, setUserUsername] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\r\n  const [loginStatusMessage, setLoginStatusMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleUserLogin = async () => {\r\n    try {\r\n      const token = await authService.userLogin(userUsername, userPassword);\r\n\r\n      // Pass the user token and username to the onUserLogin callback\r\n      onUserLogin(token, userUsername);\r\n\r\n      setLoginStatusMessage('Login successful');\r\n      openLoginModal();\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('User login failed', error);\r\n      setLoginStatusMessage('Login failed. Please check your username and password.');\r\n      openLoginModal();\r\n    }\r\n  };\r\n\r\n  const openLoginModal = () => {\r\n    setIsLoginModalOpen(true);\r\n  };\r\n\r\n  const closeLoginModal = () => {\r\n    setIsLoginModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2 className=\"login-heading\">User Login</h2>\r\n      <input\r\n        className=\"login-input\"\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={userUsername}\r\n        onChange={(e) => setUserUsername(e.target.value)}\r\n      />\r\n      <input\r\n        className=\"login-input\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={userPassword}\r\n        onChange={(e) => setUserPassword(e.target.value)}\r\n      />\r\n      \r\n      <button className=\"login-button\" onClick={handleUserLogin}>\r\n        Log In\r\n      </button>\r\n\r\n      {/* Modal for displaying login status message */}\r\n      <Modal\r\n        isOpen={isLoginModalOpen}\r\n        onRequestClose={closeLoginModal}\r\n        contentLabel=\"Login Status Message\"\r\n        className=\"login-modal\"\r\n        style={{\r\n          overlay: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"modal-content\">\r\n          <h2>{loginStatusMessage}</h2>\r\n          <button className=\"login-button\" onClick={closeLoginModal}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}