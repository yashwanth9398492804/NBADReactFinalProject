{"ast":null,"code":"import '../utils/click/isClickableInput.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport '../options.js';\nimport { parseKeyDef } from './parseKeyDef.js';\nasync function keyboard(text) {\n  const actions = parseKeyDef(this.config.keyboardMap, text);\n  for (let i = 0; i < actions.length; i++) {\n    await wait(this.config);\n    await keyboardAction(this, actions[i]);\n  }\n}\nasync function keyboardAction(instance, {\n  keyDef,\n  releasePrevious,\n  releaseSelf,\n  repeat\n}) {\n  const {\n    system\n  } = instance;\n  // Release the key automatically if it was pressed before.\n  if (system.keyboard.isKeyPressed(keyDef)) {\n    await system.keyboard.keyup(instance, keyDef);\n  }\n  if (!releasePrevious) {\n    for (let i = 1; i <= repeat; i++) {\n      await system.keyboard.keydown(instance, keyDef);\n      if (i < repeat) {\n        await wait(instance.config);\n      }\n    }\n    // Release the key only on the last iteration on `state.repeatKey`.\n    if (releaseSelf) {\n      await system.keyboard.keyup(instance, keyDef);\n    }\n  }\n}\nasync function releaseAllKeys(instance) {\n  for (const k of instance.system.keyboard.getPressedKeys()) {\n    await instance.system.keyboard.keyup(instance, k);\n  }\n}\nexport { keyboard, releaseAllKeys };","map":{"version":3,"names":["wait","parseKeyDef","keyboard","text","actions","config","keyboardMap","i","length","keyboardAction","instance","keyDef","releasePrevious","releaseSelf","repeat","system","isKeyPressed","keyup","keydown","releaseAllKeys","k","getPressedKeys"],"sources":["C:/NBAD/Y1/node_modules/@testing-library/user-event/dist/esm/keyboard/index.js"],"sourcesContent":["import '../utils/click/isClickableInput.js';\nimport '../utils/dataTransfer/Clipboard.js';\nimport '../utils/edit/isEditable.js';\nimport '../utils/edit/maxLength.js';\nimport '@testing-library/dom/dist/helpers.js';\nimport '../utils/keyDef/readNextDescriptor.js';\nimport '../utils/misc/level.js';\nimport { wait } from '../utils/misc/wait.js';\nimport '../options.js';\nimport { parseKeyDef } from './parseKeyDef.js';\n\nasync function keyboard(text) {\n    const actions = parseKeyDef(this.config.keyboardMap, text);\n    for(let i = 0; i < actions.length; i++){\n        await wait(this.config);\n        await keyboardAction(this, actions[i]);\n    }\n}\nasync function keyboardAction(instance, { keyDef, releasePrevious, releaseSelf, repeat }) {\n    const { system } = instance;\n    // Release the key automatically if it was pressed before.\n    if (system.keyboard.isKeyPressed(keyDef)) {\n        await system.keyboard.keyup(instance, keyDef);\n    }\n    if (!releasePrevious) {\n        for(let i = 1; i <= repeat; i++){\n            await system.keyboard.keydown(instance, keyDef);\n            if (i < repeat) {\n                await wait(instance.config);\n            }\n        }\n        // Release the key only on the last iteration on `state.repeatKey`.\n        if (releaseSelf) {\n            await system.keyboard.keyup(instance, keyDef);\n        }\n    }\n}\nasync function releaseAllKeys(instance) {\n    for (const k of instance.system.keyboard.getPressedKeys()){\n        await instance.system.keyboard.keyup(instance, k);\n    }\n}\n\nexport { keyboard, releaseAllKeys };\n"],"mappings":"AAAA,OAAO,oCAAoC;AAC3C,OAAO,oCAAoC;AAC3C,OAAO,6BAA6B;AACpC,OAAO,4BAA4B;AACnC,OAAO,sCAAsC;AAC7C,OAAO,uCAAuC;AAC9C,OAAO,wBAAwB;AAC/B,SAASA,IAAI,QAAQ,uBAAuB;AAC5C,OAAO,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,eAAeC,QAAQA,CAACC,IAAI,EAAE;EAC1B,MAAMC,OAAO,GAAGH,WAAW,CAAC,IAAI,CAACI,MAAM,CAACC,WAAW,EAAEH,IAAI,CAAC;EAC1D,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;IACnC,MAAMP,IAAI,CAAC,IAAI,CAACK,MAAM,CAAC;IACvB,MAAMI,cAAc,CAAC,IAAI,EAAEL,OAAO,CAACG,CAAC,CAAC,CAAC;EAC1C;AACJ;AACA,eAAeE,cAAcA,CAACC,QAAQ,EAAE;EAAEC,MAAM;EAAEC,eAAe;EAAEC,WAAW;EAAEC;AAAO,CAAC,EAAE;EACtF,MAAM;IAAEC;EAAO,CAAC,GAAGL,QAAQ;EAC3B;EACA,IAAIK,MAAM,CAACb,QAAQ,CAACc,YAAY,CAACL,MAAM,CAAC,EAAE;IACtC,MAAMI,MAAM,CAACb,QAAQ,CAACe,KAAK,CAACP,QAAQ,EAAEC,MAAM,CAAC;EACjD;EACA,IAAI,CAACC,eAAe,EAAE;IAClB,KAAI,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIO,MAAM,EAAEP,CAAC,EAAE,EAAC;MAC5B,MAAMQ,MAAM,CAACb,QAAQ,CAACgB,OAAO,CAACR,QAAQ,EAAEC,MAAM,CAAC;MAC/C,IAAIJ,CAAC,GAAGO,MAAM,EAAE;QACZ,MAAMd,IAAI,CAACU,QAAQ,CAACL,MAAM,CAAC;MAC/B;IACJ;IACA;IACA,IAAIQ,WAAW,EAAE;MACb,MAAME,MAAM,CAACb,QAAQ,CAACe,KAAK,CAACP,QAAQ,EAAEC,MAAM,CAAC;IACjD;EACJ;AACJ;AACA,eAAeQ,cAAcA,CAACT,QAAQ,EAAE;EACpC,KAAK,MAAMU,CAAC,IAAIV,QAAQ,CAACK,MAAM,CAACb,QAAQ,CAACmB,cAAc,CAAC,CAAC,EAAC;IACtD,MAAMX,QAAQ,CAACK,MAAM,CAACb,QAAQ,CAACe,KAAK,CAACP,QAAQ,EAAEU,CAAC,CAAC;EACrD;AACJ;AAEA,SAASlB,QAAQ,EAAEiB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}