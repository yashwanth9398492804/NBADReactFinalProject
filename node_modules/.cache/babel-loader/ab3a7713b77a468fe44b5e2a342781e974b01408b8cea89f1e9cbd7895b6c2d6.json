{"ast":null,"code":"var _jsxFileName = \"C:\\\\NBAD\\\\Y1\\\\src\\\\components\\\\Auth\\\\AuthenticationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserAuthContext = /*#__PURE__*/createContext();\nexport const UserAuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  const [userToken, setUserToken] = useState(null);\n  useEffect(() => {\n    const storedUserToken = localStorage.getItem('userToken');\n    console.log('Stored User Token:', storedUserToken);\n    if (storedUserToken) {\n      setUserToken(storedUserToken);\n      setIsUserLoggedIn(true);\n    }\n  }, []);\n  const userLogin = userToken => {\n    setUserToken(userToken);\n    setIsUserLoggedIn(true);\n    localStorage.setItem('userToken', userToken);\n  };\n  const userLogout = () => {\n    setUserToken(null);\n    setIsUserLoggedIn(false);\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('userJwt');\n    localStorage.removeItem('userRefreshToken');\n    window.location.reload();\n  };\n  const refreshUserAccessToken = async () => {\n    try {\n      const newUserToken = await authService.refreshUserAccessToken();\n      setUserToken(newUserToken);\n      localStorage.setItem('userToken', newUserToken);\n      return newUserToken;\n    } catch (error) {\n      console.error('Error refreshing user access token:', error);\n      userLogout();\n    }\n  };\n  const checkUserTokenExpiration = () => {\n    const expirationTime = Math.floor(Date.now() / 1000) + 60;\n    const currentTime = Date.now() / 1000;\n    return currentTime < expirationTime;\n  };\n  const setUserAccessToken = newToken => {\n    setUserToken(newToken);\n    localStorage.setItem('userToken', newToken);\n  };\n  return /*#__PURE__*/_jsxDEV(UserAuthContext.Provider, {\n    value: {\n      isUserLoggedIn,\n      userToken,\n      userLogin,\n      userLogout,\n      refreshUserAccessToken,\n      checkUserTokenExpiration,\n      setUserAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(UserAuthProvider, \"KV9Wbhdy5tthNa23+wRpjhvRl1c=\");\n_c = UserAuthProvider;\nexport const useUserAuth = () => {\n  _s2();\n  const context = useContext(UserAuthContext);\n  if (!context) {\n    throw new Error('useUserAuth must be used within a UserAuthProvider');\n  }\n  return context;\n};\n_s2(useUserAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserAuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","UserAuthContext","UserAuthProvider","children","_s","isUserLoggedIn","setIsUserLoggedIn","userToken","setUserToken","storedUserToken","localStorage","getItem","console","log","userLogin","setItem","userLogout","removeItem","window","location","reload","refreshUserAccessToken","newUserToken","error","checkUserTokenExpiration","expirationTime","Math","floor","Date","now","currentTime","setUserAccessToken","newToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/NBAD/Y1/src/components/Auth/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport authService from '../services/authService';\r\n\r\nconst UserAuthContext = createContext();\r\n\r\nexport const UserAuthProvider = ({ children }) => {\r\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n  const [userToken, setUserToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedUserToken = localStorage.getItem('userToken');\r\n    console.log('Stored User Token:', storedUserToken);\r\n\r\n    if (storedUserToken) {\r\n      setUserToken(storedUserToken);\r\n      setIsUserLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const userLogin = (userToken) => {\r\n    setUserToken(userToken);\r\n    setIsUserLoggedIn(true);\r\n    localStorage.setItem('userToken', userToken);\r\n  };\r\n\r\n  const userLogout = () => {\r\n    setUserToken(null);\r\n    setIsUserLoggedIn(false);\r\n    localStorage.removeItem('userToken');\r\n    localStorage.removeItem('userJwt');\r\n    localStorage.removeItem('userRefreshToken');\r\n    window.location.reload();\r\n  };\r\n\r\n  const refreshUserAccessToken = async () => {\r\n    try {\r\n      const newUserToken = await authService.refreshUserAccessToken();\r\n      setUserToken(newUserToken);\r\n      localStorage.setItem('userToken', newUserToken);\r\n      return newUserToken;\r\n    } catch (error) {\r\n      console.error('Error refreshing user access token:', error);\r\n      userLogout();\r\n    }\r\n  };\r\n\r\n  const checkUserTokenExpiration = () => {\r\n    const expirationTime = Math.floor(Date.now() / 1000) + 60;\r\n    const currentTime = Date.now() / 1000;\r\n\r\n    return currentTime < expirationTime;\r\n  };\r\n\r\n  const setUserAccessToken = (newToken) => {\r\n    setUserToken(newToken);\r\n    localStorage.setItem('userToken', newToken);\r\n  };\r\n\r\n  return (\r\n    <UserAuthContext.Provider\r\n      value={{\r\n        isUserLoggedIn,\r\n        userToken,\r\n        userLogin,\r\n        userLogout,\r\n        refreshUserAccessToken,\r\n        checkUserTokenExpiration,\r\n        setUserAccessToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserAuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUserAuth = () => {\r\n  const context = useContext(UserAuthContext);\r\n  if (!context) {\r\n    throw new Error('useUserAuth must be used within a UserAuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}