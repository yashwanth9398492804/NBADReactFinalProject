{"ast":null,"code":"var _jsxFileName = \"C:\\\\NBAD\\\\Y1\\\\src\\\\components\\\\Dashboard\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\n//Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport AddBudget from './CreateBudget';\nimport BudgetList from './BudgetOverview';\nimport BudgetChart from './FinancialChart';\nimport AddBudgetCapacity from './BudgetCapacityManager';\nimport { useUserAuth } from '../Auth/AuthenticationContext'; // Updated import\nimport '../../styles/Dashboard.css'; // Import the new CSS file\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = config.apiUrl;\nconst Dashboard = ({\n  token,\n  username\n}) => {\n  _s();\n  const {\n    userLogout,\n    refreshUserAccessToken,\n    checkUserTokenExpiration,\n    setUserAccessToken // Updated function name\n  } = useUserAuth(); // Updated context function\n\n  const [showAddBudget, setShowAddBudget] = useState(false);\n  const [showBudgetList, setShowBudgetList] = useState(false);\n  const [showBudgetChart, setShowBudgetChart] = useState(false);\n  const [showAddBudgetCapacity, setShowAddBudgetCapacity] = useState(false);\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [isTokenRefreshed, setIsTokenRefreshed] = useState(false);\n  const handleCloseConfirmationModal = () => {\n    setShowConfirmationModal(false);\n  };\n  const handleTokenRefreshConfirmation = () => {\n    setShowConfirmationModal(true);\n\n    // After 5 seconds, if the user hasn't made a choice, hide the modal\n    setTimeout(() => {\n      setShowConfirmationModal(false);\n    }, 5000);\n  };\n  const handleConfirmationYes = async () => {\n    // User clicked 'Yes' to refresh token\n    setIsTokenRefreshed(true);\n    setShowConfirmationModal(false);\n    try {\n      console.log('Refreshing token...');\n      await handleTokenRefresh();\n      console.log('Token refreshed successfully. Continuing with the action...');\n      // Perform other actions after token refresh, if needed\n    } catch (error) {\n      console.error('Error refreshing token:', error);\n      // Handle errors, e.g., redirect to login page\n      userLogout();\n    }\n  };\n  const handleConfirmationNo = () => {\n    // User clicked 'No' to not refresh token\n    setShowConfirmationModal(false);\n    window.location.reload();\n  };\n  const handleTokenRefresh = async () => {\n    // Add your token refresh logic here\n    // Example:\n    // const newUserToken = await token.refreshAccessToken();\n    // setUserAccessToken(newUserToken); // Updated function name\n  };\n  const handleAddBudgetClick = () => {\n    setShowAddBudget(true);\n    setShowBudgetList(false);\n    setShowBudgetChart(false);\n    setShowAddBudgetCapacity(false);\n  };\n  const handleBudgetListClick = () => {\n    setShowAddBudget(false);\n    setShowBudgetList(true);\n    setShowBudgetChart(false);\n    setShowAddBudgetCapacity(false);\n  };\n  const handleBudgetChartClick = () => {\n    setShowAddBudget(false);\n    setShowBudgetList(false);\n    setShowBudgetChart(true);\n    setShowAddBudgetCapacity(false);\n  };\n  const handleAddBudgetCapacityClick = () => {\n    setShowAddBudget(false);\n    setShowBudgetList(false);\n    setShowBudgetChart(false);\n    setShowAddBudgetCapacity(true);\n  };\n  const handleLogout = () => {\n    window.location.reload();\n    userLogout();\n  };\n  const handleAddBudgetCapacity = async data => {\n    // Your logic for adding budget capacity\n    try {\n      const apiUrl = BASE_URL + '/api/budgets/capacity';\n      console.log('dashboard apiUrl', apiUrl);\n      data.username = username;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}` // Updated variable name\n        },\n\n        body: JSON.stringify(data)\n      });\n      console.log('apiUrl', apiUrl);\n      console.log('response from dashboard', response);\n\n      // Log headers and request payload for debugging\n      console.log('Request Headers:', response.headers);\n      console.log('Request Payload:', JSON.stringify(data));\n      let responseData;\n      if (response.ok) {\n        responseData = await response.json();\n        console.log('Budget capacity added successfully:', responseData);\n        return {\n          success: true,\n          message: 'Budget capacity added successfully',\n          responseData\n        };\n      } else {\n        console.error('Failed to add budget capacity:', response.statusText);\n        const errorData = await response.json();\n        console.error('Error Data:', errorData);\n        throw new Error('Failed to add budget capacity');\n      }\n    } catch (error) {\n      console.error('Error adding budget capacity:', error.message);\n      throw error;\n    }\n  };\n  useEffect(() => {\n    let isMounted = true; // Flag to track whether the component is mounted\n\n    console.log('Setting up token refresh interval...');\n    const tokenRefreshInterval = setInterval(async () => {\n      if (!isTokenRefreshed && isMounted) {\n        console.log('Token about to expire. Displaying confirmation modal...');\n\n        // Check if the user token has expired\n        const hasExpired = !checkUserTokenExpiration(); // Updated function name\n\n        if (hasExpired) {\n          setShowConfirmationModal(true);\n\n          // After 10 seconds, if the user hasn't made a choice, hide the modal and refresh the page\n          setTimeout(async () => {\n            if (!isTokenRefreshed && isMounted) {\n              setShowConfirmationModal(false);\n              try {\n                console.log('Refreshing token...');\n                await handleTokenRefresh();\n                if (isMounted) {\n                  setIsTokenRefreshed(true); // Set the state to true after token refresh\n                  console.log('Token refreshed successfully.');\n                  window.location.reload();\n                }\n              } catch (error) {\n                console.error('Error refreshing token:', error);\n                userLogout();\n                window.location.reload();\n              }\n            } else {\n              setShowConfirmationModal(false);\n            }\n          }, 10000);\n        }\n      }\n    }, 50000);\n\n    // Cleanup function\n    return () => {\n      console.log('Clearing token refresh interval...');\n      clearInterval(tokenRefreshInterval);\n      isMounted = false; // Set the flag to false when the component unmounts\n    };\n  }, [isTokenRefreshed, userLogout, checkUserTokenExpiration, handleTokenRefresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"personalbudget\",\n      children: \"Personal Budget Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"personalbudget\",\n      children: \"View and manage your budgets here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"logout-button\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBudgetListClick,\n            children: \"Budget List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBudgetChartClick,\n            children: \"Budget Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddBudgetClick,\n            children: \"Add Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddBudgetCapacityClick,\n            children: \"Configure Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), showAddBudget && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-component add-budget-component\",\n      children: [/*#__PURE__*/_jsxDEV(AddBudget, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), showBudgetList && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-component budget-list-component\",\n      children: [/*#__PURE__*/_jsxDEV(BudgetList, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), showBudgetChart && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-component budget-chart-component\",\n      children: [/*#__PURE__*/_jsxDEV(BudgetChart, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), showAddBudgetCapacity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-component add-budget-capacity-component\",\n      children: [/*#__PURE__*/_jsxDEV(AddBudgetCapacity, {\n        token: token,\n        onAddBudgetCapacity: handleAddBudgetCapacity,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showConfirmationModal,\n      onRequestClose: handleCloseConfirmationModal,\n      contentLabel: \"Token Refresh Confirmation Modal\",\n      className: \"dashboard-modal\" // Apply the class for custom styles\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your session is about to expire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Do you want to refresh your session?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmationYes,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmationNo,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"4FbOnY6CsLaJFoFHcgkC8hDJZoo=\", false, function () {\n  return [useUserAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Modal","AddBudget","BudgetList","BudgetChart","AddBudgetCapacity","useUserAuth","config","jsxDEV","_jsxDEV","BASE_URL","apiUrl","Dashboard","token","username","_s","userLogout","refreshUserAccessToken","checkUserTokenExpiration","setUserAccessToken","showAddBudget","setShowAddBudget","showBudgetList","setShowBudgetList","showBudgetChart","setShowBudgetChart","showAddBudgetCapacity","setShowAddBudgetCapacity","showConfirmationModal","setShowConfirmationModal","isTokenRefreshed","setIsTokenRefreshed","handleCloseConfirmationModal","handleTokenRefreshConfirmation","setTimeout","handleConfirmationYes","console","log","handleTokenRefresh","error","handleConfirmationNo","window","location","reload","handleAddBudgetClick","handleBudgetListClick","handleBudgetChartClick","handleAddBudgetCapacityClick","handleLogout","handleAddBudgetCapacity","data","response","fetch","method","headers","Authorization","body","JSON","stringify","responseData","ok","json","success","message","statusText","errorData","Error","isMounted","tokenRefreshInterval","setInterval","hasExpired","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddBudgetCapacity","isOpen","onRequestClose","contentLabel","_c","$RefreshReg$"],"sources":["C:/NBAD/Y1/src/components/Dashboard/UserDashboard.js"],"sourcesContent":["//Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport AddBudget from './CreateBudget';\r\nimport BudgetList from './BudgetOverview';\r\nimport BudgetChart from './FinancialChart';\r\nimport AddBudgetCapacity from './BudgetCapacityManager';\r\nimport { useUserAuth } from '../Auth/AuthenticationContext'; // Updated import\r\nimport '../../styles/Dashboard.css'; // Import the new CSS file\r\nimport config from '../../config';\r\n\r\nconst BASE_URL = config.apiUrl;\r\n\r\nconst Dashboard = ({ token, username }) => {\r\n  const {\r\n    userLogout,\r\n    refreshUserAccessToken,\r\n    checkUserTokenExpiration,\r\n    setUserAccessToken, // Updated function name\r\n  } = useUserAuth(); // Updated context function\r\n\r\n  const [showAddBudget, setShowAddBudget] = useState(false);\r\n  const [showBudgetList, setShowBudgetList] = useState(false);\r\n  const [showBudgetChart, setShowBudgetChart] = useState(false);\r\n  const [showAddBudgetCapacity, setShowAddBudgetCapacity] = useState(false);\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const [isTokenRefreshed, setIsTokenRefreshed] = useState(false);\r\n\r\n  const handleCloseConfirmationModal = () => {\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  const handleTokenRefreshConfirmation = () => {\r\n    setShowConfirmationModal(true);\r\n\r\n    // After 5 seconds, if the user hasn't made a choice, hide the modal\r\n    setTimeout(() => {\r\n      setShowConfirmationModal(false);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleConfirmationYes = async () => {\r\n    // User clicked 'Yes' to refresh token\r\n    setIsTokenRefreshed(true);\r\n    setShowConfirmationModal(false);\r\n    try {\r\n      console.log('Refreshing token...');\r\n      await handleTokenRefresh();\r\n      console.log('Token refreshed successfully. Continuing with the action...');\r\n      // Perform other actions after token refresh, if needed\r\n    } catch (error) {\r\n      console.error('Error refreshing token:', error);\r\n      // Handle errors, e.g., redirect to login page\r\n      userLogout();\r\n    }\r\n  };\r\n\r\n  const handleConfirmationNo = () => {\r\n    // User clicked 'No' to not refresh token\r\n    setShowConfirmationModal(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleTokenRefresh = async () => {\r\n    // Add your token refresh logic here\r\n    // Example:\r\n    // const newUserToken = await token.refreshAccessToken();\r\n    // setUserAccessToken(newUserToken); // Updated function name\r\n  };\r\n\r\n  const handleAddBudgetClick = () => {\r\n    setShowAddBudget(true);\r\n    setShowBudgetList(false);\r\n    setShowBudgetChart(false);\r\n    setShowAddBudgetCapacity(false);\r\n  };\r\n\r\n  const handleBudgetListClick = () => {\r\n    setShowAddBudget(false);\r\n    setShowBudgetList(true);\r\n    setShowBudgetChart(false);\r\n    setShowAddBudgetCapacity(false);\r\n  };\r\n\r\n  const handleBudgetChartClick = () => {\r\n    setShowAddBudget(false);\r\n    setShowBudgetList(false);\r\n    setShowBudgetChart(true);\r\n    setShowAddBudgetCapacity(false);\r\n  };\r\n\r\n  const handleAddBudgetCapacityClick = () => {\r\n    setShowAddBudget(false);\r\n    setShowBudgetList(false);\r\n    setShowBudgetChart(false);\r\n    setShowAddBudgetCapacity(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.location.reload();\r\n    userLogout();\r\n  };\r\n\r\n  const handleAddBudgetCapacity = async (data) => {\r\n    // Your logic for adding budget capacity\r\n    try {\r\n      const apiUrl = BASE_URL + '/api/budgets/capacity';\r\n      console.log('dashboard apiUrl', apiUrl);\r\n\r\n      data.username = username;\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`, // Updated variable name\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      console.log('apiUrl', apiUrl);\r\n      console.log('response from dashboard', response);\r\n\r\n      // Log headers and request payload for debugging\r\n      console.log('Request Headers:', response.headers);\r\n      console.log('Request Payload:', JSON.stringify(data));\r\n\r\n      let responseData;\r\n\r\n      if (response.ok) {\r\n        responseData = await response.json();\r\n        console.log('Budget capacity added successfully:', responseData);\r\n        return { success: true, message: 'Budget capacity added successfully', responseData };\r\n      } else {\r\n        console.error('Failed to add budget capacity:', response.statusText);\r\n\r\n        const errorData = await response.json();\r\n        console.error('Error Data:', errorData);\r\n\r\n        throw new Error('Failed to add budget capacity');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding budget capacity:', error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // Flag to track whether the component is mounted\r\n\r\n    console.log('Setting up token refresh interval...');\r\n    const tokenRefreshInterval = setInterval(async () => {\r\n      if (!isTokenRefreshed && isMounted) {\r\n        console.log('Token about to expire. Displaying confirmation modal...');\r\n\r\n        // Check if the user token has expired\r\n        const hasExpired = !checkUserTokenExpiration(); // Updated function name\r\n\r\n        if (hasExpired) {\r\n          setShowConfirmationModal(true);\r\n\r\n          // After 10 seconds, if the user hasn't made a choice, hide the modal and refresh the page\r\n          setTimeout(async () => {\r\n            if (!isTokenRefreshed && isMounted) {\r\n              setShowConfirmationModal(false);\r\n              try {\r\n                console.log('Refreshing token...');\r\n                await handleTokenRefresh();\r\n                if (isMounted) {\r\n                  setIsTokenRefreshed(true); // Set the state to true after token refresh\r\n                  console.log('Token refreshed successfully.');\r\n                  window.location.reload();\r\n                }\r\n              } catch (error) {\r\n                console.error('Error refreshing token:', error);\r\n                userLogout();\r\n                window.location.reload();\r\n              }\r\n            } else {\r\n              setShowConfirmationModal(false);\r\n            }\r\n          }, 10000);\r\n        }\r\n      }\r\n    }, 50000);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      console.log('Clearing token refresh interval...');\r\n      clearInterval(tokenRefreshInterval);\r\n      isMounted = false; // Set the flag to false when the component unmounts\r\n    };\r\n  }, [isTokenRefreshed, userLogout, checkUserTokenExpiration, handleTokenRefresh]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"personalbudget\">Personal Budget Application</h1>\r\n      <p className=\"personalbudget\">View and manage your budgets here.</p>\r\n\r\n      <button onClick={handleLogout} className=\"logout-button\">\r\n        Logout\r\n      </button>\r\n\r\n      <nav className=\"dashboard\">\r\n  <ul>\r\n    <li>\r\n      <button onClick={handleBudgetListClick}>Budget List</button>\r\n    </li>\r\n    <li>\r\n      <button onClick={handleBudgetChartClick}>Budget Chart</button>\r\n    </li>\r\n    <li>\r\n      <button onClick={handleAddBudgetClick}>Add Budget</button>\r\n    </li>\r\n    <li>\r\n      <button onClick={handleAddBudgetCapacityClick}>Configure Budget</button>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\n\r\n      {showAddBudget && (\r\n        <div className=\"centered-component add-budget-component\">\r\n          <AddBudget token={token} /> {/* Updated prop name */}\r\n        </div>\r\n      )}\r\n      {showBudgetList && (\r\n        <div className=\"centered-component budget-list-component\">\r\n          <BudgetList token={token} /> {/* Updated prop name */}\r\n        </div>\r\n      )}\r\n      {showBudgetChart && (\r\n        <div className=\"centered-component budget-chart-component\">\r\n          <BudgetChart token={token} /> {/* Updated prop name */}\r\n        </div>\r\n      )}\r\n      {showAddBudgetCapacity && (\r\n        <div className=\"centered-component add-budget-capacity-component\">\r\n          <AddBudgetCapacity token={token} onAddBudgetCapacity={handleAddBudgetCapacity} username={username} /> {/* Updated prop name */}\r\n        </div>\r\n      )}\r\n\r\n      {/* Token Refresh Confirmation Modal */}\r\n      <Modal\r\n        isOpen={showConfirmationModal}\r\n        onRequestClose={handleCloseConfirmationModal}\r\n        contentLabel=\"Token Refresh Confirmation Modal\"\r\n        className=\"dashboard-modal\" // Apply the class for custom styles\r\n      >\r\n        <h2>Your session is about to expire</h2>\r\n        <p>Do you want to refresh your session?</p>\r\n        <button onClick={handleConfirmationYes}>Yes</button>\r\n        <button onClick={handleConfirmationNo}>No</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}