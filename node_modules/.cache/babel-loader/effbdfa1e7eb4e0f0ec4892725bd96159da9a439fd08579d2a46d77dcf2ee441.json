{"ast":null,"code":"var _jsxFileName = \"C:\\\\NBAD\\\\Y1\\\\src\\\\components\\\\Dashboard\\\\FinancialChart.js\",\n  _s = $RefreshSig$();\n//BudgetChart.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport apiService from '../services/apiService';\nimport '../../styles/BudgetChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetChart = ({\n  authToken\n}) => {\n  _s();\n  const barChartCanvasRef = useRef(null);\n  const pieChartCanvasRef = useRef(null);\n  const lineChartCanvasRef = useRef(null);\n  const bubbleChartCanvasRef = useRef(null);\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [budgetData, setBudgetData] = useState([]);\n  const [budgetCapacity, setBudgetCapacity] = useState([]);\n  useEffect(() => {\n    const fetchDataAndCreateCharts = async () => {\n      try {\n        const budgetEndpoint = selectedMonth ? `/budgets/getAllBudgets/${selectedMonth}` : '/budgets/getAllBudgets';\n        const capacityEndpoint = selectedMonth ? `/budgets/capacity/${selectedMonth}` : '/budgets/capacity';\n        const [budgetResponse, capacityResponse] = await Promise.all([apiService.get(budgetEndpoint, authToken, {\n          params: {\n            month: parseInt(selectedMonth, 10)\n          }\n        }), apiService.get(capacityEndpoint, authToken)]);\n        const budgetData = budgetResponse.data || [];\n        const capacityData = capacityResponse.data || [];\n        setBudgetData(budgetData);\n        setBudgetCapacity(capacityData);\n        setLoading(false);\n\n        // Call the chart creation functions after fetching data\n        createBarChart();\n        pieChartCanvasRef();\n        createLineChart();\n        createBubbleChart();\n      } catch (error) {\n        console.error('Error fetching budget data: ', error);\n        setLoading(false);\n      }\n    };\n    fetchDataAndCreateCharts();\n  }, [authToken, selectedMonth]);\n  useEffect(() => {\n    if (!loading) {\n      createBarChart();\n      createPieChart();\n      createLineChart();\n      createBubbleChart();\n    }\n  }, [loading, budgetData, budgetCapacity]);\n  const createBarChart = () => {\n    const canvas = barChartCanvasRef.current;\n    if (!canvas) {\n      console.error('Bar Chart Canvas element not found');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      console.error('Unable to get 2D context for Bar Chart canvas');\n      return;\n    }\n    try {\n      if (canvas.chart) {\n        canvas.chart.destroy();\n      }\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetName: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null\n        };\n      });\n      const chartData = {\n        labels: combinedData.map(item => item.budgetName),\n        datasets: [{\n          label: 'Actual Expenditure',\n          backgroundColor: '#ff6384',\n          data: combinedData.map(item => item.actualExpenditure)\n        }, {\n          label: 'Budget',\n          backgroundColor: '#36a2eb',\n          data: combinedData.map(item => item.budgetCapacity)\n        }]\n      };\n      console.log('Bar Chart Data:', chartData);\n      canvas.chart = new Chart(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              stacked: false\n            },\n            y: {\n              stacked: false\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating bar chart: ', error);\n    }\n  };\n\n  // Implement similar functions for Pie Chart, Line Chart, and Bubble Chart\n\n  const createPieChart = () => {\n    const pieCanvas = pieCanvasRef.current;\n    if (!pieCanvas) {\n      console.error('Pie Canvas element not found');\n      return;\n    }\n    const pieCtx = pieCanvas.getContext('2d');\n    if (!pieCtx) {\n      console.error('Unable to get 2D context for pie canvas');\n      return;\n    }\n    try {\n      if (pieCanvas.chart) {\n        pieCanvas.chart.destroy();\n      }\n      const combinedData = budgetData.map(dataItem => {\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\n        return {\n          budgetname: dataItem.budgetname,\n          actualExpenditure: dataItem.budgetnumber,\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null\n        };\n      });\n      const pieData = combinedData.map((item, index) => {\n        const actualExpenditure = item.actualExpenditure || 0;\n        const budgetCapacity = item.budgetCapacity || 0;\n        const remainingBudget = budgetCapacity - actualExpenditure;\n        const backgroundColors = ['#ff6384', '#36a2eb', '#ff9f40', '#4bc0c0', '#9966ff', '#ffcc66', '#6666ff', '#99ff66', '#ff6666', '#66ccff', '#ffcc99', '#cc66ff', '#33cc33', '#6666cc', '#cc6666', '#99ccff', '#ff6666', '#66ccff', '#ffcc99', '#cc66ff'];\n        return {\n          label: item.budgetname,\n          data: [actualExpenditure, remainingBudget],\n          backgroundColor: backgroundColors[index % backgroundColors.length]\n        };\n      });\n      console.log('pieChartData:', pieData);\n      pieCanvas.chart = new Chart(pieCtx, {\n        type: 'pie',\n        data: {\n          labels: pieData.map(item => item.label),\n          datasets: [{\n            data: pieData.map(item => item.data[0]),\n            backgroundColor: pieData.map(item => item.backgroundColor)\n          }]\n        }\n      });\n    } catch (error) {\n      console.error('Error creating pie chart: ', error);\n    }\n  };\n  const createLineChart = async () => {\n    const lineCanvas = lineCanvasRef.current;\n    if (!lineCanvas) {\n      console.error('Line Canvas element not found');\n      return;\n    }\n    const lineCtx = lineCanvas.getContext('2d');\n    if (!lineCtx) {\n      console.error('Unable to get 2D context for line canvas');\n      return;\n    }\n    try {\n      if (lineCanvas.chart) {\n        lineCanvas.chart.destroy();\n      }\n      const cumulativeData = [];\n\n      // Fetch data for each month and sum the budgetnumber and capacitynumber values\n      for (let month = 1; month <= 12; month++) {\n        const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, authtoken);\n        const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, authtoken);\n        const budgetData = budgetsResponse.data || [];\n        const capacityData = capacityResponse.data || [];\n        let totalBudget = 0;\n        let totalCapacity = 0;\n        for (const item of budgetData) {\n          totalBudget += Number(item.budgetnumber) || 0;\n        }\n        for (const item of capacityData) {\n          totalCapacity += Number(item.budgetnumber) || 0;\n        }\n        cumulativeData.push({\n          month: month,\n          totalBudget: totalBudget,\n          totalCapacity: totalCapacity\n        });\n      }\n\n      //console.log('cumulativeData', cumulativeData);\n\n      const chartData = {\n        labels: cumulativeData.map(item => item.month),\n        datasets: [{\n          label: 'Cumulative Actual Budget',\n          borderColor: '#ff6384',\n          data: cumulativeData.map(item => item.totalBudget),\n          fill: false\n        }, {\n          label: 'Cumulative Budget',\n          borderColor: '#36a2eb',\n          data: cumulativeData.map(item => item.totalCapacity),\n          fill: false\n        }]\n      };\n      lineCanvas.chart = new Chart(lineCtx, {\n        type: 'line',\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              type: 'category',\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n            },\n            y: {\n              type: 'linear',\n              position: 'left'\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating line chart: ', error);\n    }\n  };\n  const createBubbleChart = async () => {\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const bubbleCanvas = bubbleCanvasRef.current;\n    if (!bubbleCanvas) {\n      console.error('Bubble Canvas element not found');\n      return;\n    }\n    const bubbleCtx = bubbleCanvas.getContext('2d');\n    if (!bubbleCtx) {\n      console.error('Unable to get 2D context for bubble canvas');\n      return;\n    }\n    try {\n      // Destroy existing chart instance\n      if (bubbleCanvas.chart) {\n        bubbleCanvas.chart.destroy();\n      }\n\n      // Create a new canvas element\n      const newBubbleCanvas = document.createElement('canvas');\n      bubbleCanvas.parentNode.replaceChild(newBubbleCanvas, bubbleCanvas);\n      bubbleCanvasRef.current = newBubbleCanvas;\n      const newBubbleCtx = newBubbleCanvas.getContext('2d');\n      if (!newBubbleCtx) {\n        console.error('Unable to get 2D context for the new bubble canvas');\n        return;\n      }\n      const cumulativeData = [];\n\n      // Fetch data for each month and sum the budgetnumber and capacitynumber values\n      for (let month = 1; month <= 12; month++) {\n        try {\n          const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, authtoken);\n          const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, authtoken);\n          const budgetData = budgetsResponse.data || [];\n          const capacityData = capacityResponse.data || [];\n          let totalBudget = 0;\n          let totalCapacity = 0;\n          for (const item of budgetData) {\n            totalBudget += Number(item.budgetnumber) || 0;\n          }\n          for (const item of capacityData) {\n            totalCapacity += Number(item.budgetnumber) || 0;\n          }\n          cumulativeData.push({\n            month: month,\n            monthName: monthNames[month - 1],\n            totalBudget: totalBudget,\n            totalCapacity: totalCapacity\n          });\n        } catch (error) {\n          console.error(`Error fetching data for month ${month}: `, error);\n        }\n      }\n      const bubbleData = cumulativeData.map(item => ({\n        month: item.month,\n        monthName: item.monthName,\n        totalBudget: item.totalBudget,\n        totalCapacity: item.totalCapacity,\n        // Add a new property for the size of the bubble\n        bubbleSize: calculateBubbleSize(item.totalBudget, item.totalCapacity)\n      }));\n      console.log('bubbleChartData:', bubbleData);\n      newBubbleCanvas.chart = new Chart(newBubbleCtx, {\n        type: 'bubble',\n        data: {\n          datasets: [{\n            label: 'Budget',\n            backgroundColor: '#36a2eb',\n            // Set the color for total budget bubbles\n            data: bubbleData.map(item => ({\n              x: item.month,\n              y: item.totalBudget,\n              r: item.bubbleSize,\n              monthName: item.monthName\n            }))\n          }, {\n            label: 'Actual Expenditure',\n            backgroundColor: '#ff6384',\n            // Set the color for total capacity bubbles\n            data: bubbleData.map(item => ({\n              x: item.month,\n              y: item.totalCapacity,\n              r: item.bubbleSize,\n              monthName: item.monthName\n            }))\n          }]\n        },\n        options: {\n          tooltips: {\n            callbacks: {\n              label: (tooltipItem, data) => {\n                const datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n                const value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].y;\n                const monthName = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].monthName;\n                return `${datasetLabel}: ${value} for ${monthName}`;\n              }\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Error creating bubble chart: ', error);\n    }\n  };\n  const calculateBubbleSize = (totalBudget, totalCapacity) => {\n    // Your logic to calculate bubble size based on totalBudget and totalCapacity\n    // Here's a simple example, you can customize it based on your needs\n    console.log('totalBudget', totalBudget);\n    console.log('totalCapacity', totalCapacity);\n    const percentageSpent = totalCapacity / totalBudget * 4;\n    const bubbleSize = Math.max(10, percentageSpent); // Adjust the scale as needed\n    return bubbleSize;\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Various Types of Budget Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMonth,\n        onChange: handleMonthChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"January\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"February\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"March\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"April\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"May\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6\",\n          children: \"June\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7\",\n          children: \"July\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"8\",\n          children: \"August\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"9\",\n          children: \"September\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"October\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"11\",\n          children: \"November\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"12\",\n          children: \"December\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollable-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Actual Expenditure vs Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-canvas\",\n            ref: barChartCanvasRef,\n            width: 800,\n            height: 800\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Actual Expenditure Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-pie-canvas\",\n            ref: pieChartCanvasRef,\n            width: 800,\n            height: 800\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Month, Actual Expenditure, Budget Capacity Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-bubble-canvas\",\n            ref: bubbleChartCanvasRef,\n            width: 800,\n            height: 800\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Actual budget vs Cumulative budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), budgetData.length > 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            className: \"budget-line-canvas\",\n            ref: lineChartCanvasRef,\n            width: 800,\n            height: 800\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }, this), budgetData.length === 0 && budgetCapacity.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No budget data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetChart, \"OvoL36NHwsXdsZLEI/8z0UI/rFI=\");\n_c = BudgetChart;\nexport default BudgetChart;\nvar _c;\n$RefreshReg$(_c, \"BudgetChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","apiService","jsxDEV","_jsxDEV","BudgetChart","authToken","_s","barChartCanvasRef","pieChartCanvasRef","lineChartCanvasRef","bubbleChartCanvasRef","selectedMonth","setSelectedMonth","loading","setLoading","budgetData","setBudgetData","budgetCapacity","setBudgetCapacity","fetchDataAndCreateCharts","budgetEndpoint","capacityEndpoint","budgetResponse","capacityResponse","Promise","all","get","params","month","parseInt","data","capacityData","createBarChart","createLineChart","createBubbleChart","error","console","createPieChart","canvas","current","ctx","getContext","chart","destroy","combinedData","map","dataItem","matchingCapacity","find","capacityItem","budgetname","budgetName","actualExpenditure","budgetnumber","chartData","labels","item","datasets","label","backgroundColor","log","type","options","scales","x","stacked","y","pieCanvas","pieCanvasRef","pieCtx","pieData","index","remainingBudget","backgroundColors","length","lineCanvas","lineCanvasRef","lineCtx","cumulativeData","budgetsResponse","authtoken","totalBudget","totalCapacity","Number","push","borderColor","fill","position","monthNames","bubbleCanvas","bubbleCanvasRef","bubbleCtx","newBubbleCanvas","document","createElement","parentNode","replaceChild","newBubbleCtx","monthName","bubbleData","bubbleSize","calculateBubbleSize","r","tooltips","callbacks","tooltipItem","datasetLabel","datasetIndex","value","percentageSpent","Math","max","handleMonthChange","event","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","ref","width","height","_c","$RefreshReg$"],"sources":["C:/NBAD/Y1/src/components/Dashboard/FinancialChart.js"],"sourcesContent":["//BudgetChart.js\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport apiService from '../services/apiService';\r\nimport '../../styles/BudgetChart.css';\r\n\r\nconst BudgetChart = ({ authToken }) => {\r\n  const barChartCanvasRef = useRef(null);\r\n  const pieChartCanvasRef = useRef(null);\r\n  const lineChartCanvasRef = useRef(null);\r\n  const bubbleChartCanvasRef = useRef(null);\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [budgetData, setBudgetData] = useState([]);\r\n  const [budgetCapacity, setBudgetCapacity] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataAndCreateCharts = async () => {\r\n      try {\r\n        const budgetEndpoint = selectedMonth\r\n          ? `/budgets/getAllBudgets/${selectedMonth}`\r\n          : '/budgets/getAllBudgets';\r\n\r\n        const capacityEndpoint = selectedMonth\r\n          ? `/budgets/capacity/${selectedMonth}`\r\n          : '/budgets/capacity';\r\n\r\n        const [budgetResponse, capacityResponse] = await Promise.all([\r\n          apiService.get(budgetEndpoint, authToken, {\r\n            params: { month: parseInt(selectedMonth, 10) },\r\n          }),\r\n          apiService.get(capacityEndpoint, authToken),\r\n        ]);\r\n\r\n        const budgetData = budgetResponse.data || [];\r\n        const capacityData = capacityResponse.data || [];\r\n\r\n        setBudgetData(budgetData);\r\n        setBudgetCapacity(capacityData);\r\n        setLoading(false);\r\n\r\n        // Call the chart creation functions after fetching data\r\n        createBarChart();\r\n        pieChartCanvasRef();\r\n        createLineChart();\r\n        createBubbleChart();\r\n      } catch (error) {\r\n        console.error('Error fetching budget data: ', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDataAndCreateCharts();\r\n  }, [authToken, selectedMonth]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      createBarChart();\r\n      createPieChart();\r\n      createLineChart();\r\n      createBubbleChart();\r\n    }\r\n  }, [loading, budgetData, budgetCapacity]);\r\n\r\n  const createBarChart = () => {\r\n    const canvas = barChartCanvasRef.current;\r\n\r\n    if (!canvas) {\r\n      console.error('Bar Chart Canvas element not found');\r\n      return;\r\n    }\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n      console.error('Unable to get 2D context for Bar Chart canvas');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (canvas.chart) {\r\n        canvas.chart.destroy();\r\n      }\r\n\r\n      const combinedData = budgetData.map(dataItem => {\r\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\r\n        return {\r\n          budgetName: dataItem.budgetname,\r\n          actualExpenditure: dataItem.budgetnumber,\r\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null,\r\n        };\r\n      });\r\n\r\n      const chartData = {\r\n        labels: combinedData.map(item => item.budgetName),\r\n        datasets: [\r\n          {\r\n            label: 'Actual Expenditure',\r\n            backgroundColor: '#ff6384',\r\n            data: combinedData.map(item => item.actualExpenditure),\r\n          },\r\n          {\r\n            label: 'Budget',\r\n            backgroundColor: '#36a2eb',\r\n            data: combinedData.map(item => item.budgetCapacity),\r\n          },\r\n        ],\r\n      };\r\n\r\n      console.log('Bar Chart Data:', chartData);\r\n\r\n      canvas.chart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: chartData,\r\n        options: {\r\n          scales: {\r\n            x: { stacked: false },\r\n            y: { stacked: false },\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating bar chart: ', error);\r\n    }\r\n  };\r\n\r\n  // Implement similar functions for Pie Chart, Line Chart, and Bubble Chart\r\n\r\n  const createPieChart = () => {\r\n    const pieCanvas = pieCanvasRef.current;\r\n\r\n    if (!pieCanvas) {\r\n      console.error('Pie Canvas element not found');\r\n      return;\r\n    }\r\n\r\n    const pieCtx = pieCanvas.getContext('2d');\r\n    if (!pieCtx) {\r\n      console.error('Unable to get 2D context for pie canvas');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (pieCanvas.chart) {\r\n        pieCanvas.chart.destroy();\r\n      }\r\n\r\n      const combinedData = budgetData.map(dataItem => {\r\n        const matchingCapacity = budgetCapacity.find(capacityItem => capacityItem.budgetname === dataItem.budgetname);\r\n        return {\r\n          budgetname: dataItem.budgetname,\r\n          actualExpenditure: dataItem.budgetnumber,\r\n          budgetCapacity: matchingCapacity ? matchingCapacity.budgetnumber : null,\r\n        };\r\n      });\r\n\r\n      const pieData = combinedData.map((item, index) => {\r\n        const actualExpenditure = item.actualExpenditure || 0;\r\n        const budgetCapacity = item.budgetCapacity || 0;\r\n        const remainingBudget = budgetCapacity - actualExpenditure;\r\n\r\n        const backgroundColors = [\r\n          '#ff6384', '#36a2eb', '#ff9f40', '#4bc0c0', '#9966ff', '#ffcc66', '#6666ff', '#99ff66', '#ff6666', '#66ccff',\r\n          '#ffcc99', '#cc66ff', '#33cc33', '#6666cc', '#cc6666', '#99ccff', '#ff6666', '#66ccff', '#ffcc99', '#cc66ff'\r\n        ];\r\n\r\n        return {\r\n          label: item.budgetname,\r\n          data: [actualExpenditure, remainingBudget],\r\n          backgroundColor: backgroundColors[index % backgroundColors.length],\r\n        };\r\n      });\r\n\r\n      console.log('pieChartData:', pieData);\r\n\r\n      pieCanvas.chart = new Chart(pieCtx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: pieData.map(item => item.label),\r\n          datasets: [{\r\n            data: pieData.map(item => item.data[0]),\r\n            backgroundColor: pieData.map(item => item.backgroundColor),\r\n          }],\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating pie chart: ', error);\r\n    }\r\n  };\r\n\r\n  const createLineChart = async () => {\r\n    const lineCanvas = lineCanvasRef.current;\r\n  \r\n    if (!lineCanvas) {\r\n      console.error('Line Canvas element not found');\r\n      return;\r\n    }\r\n  \r\n    const lineCtx = lineCanvas.getContext('2d');\r\n    if (!lineCtx) {\r\n      console.error('Unable to get 2D context for line canvas');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      if (lineCanvas.chart) {\r\n        lineCanvas.chart.destroy();\r\n      }\r\n  \r\n      const cumulativeData = [];\r\n  \r\n      // Fetch data for each month and sum the budgetnumber and capacitynumber values\r\n      for (let month = 1; month <= 12; month++) {\r\n        const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, authtoken);\r\n        const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, authtoken);\r\n  \r\n        const budgetData = budgetsResponse.data || [];\r\n        const capacityData = capacityResponse.data || [];\r\n  \r\n        let totalBudget = 0;\r\n        let totalCapacity = 0;\r\n  \r\n        for (const item of budgetData) {\r\n          totalBudget += Number(item.budgetnumber) || 0;\r\n        }\r\n  \r\n        for (const item of capacityData) {\r\n          totalCapacity += Number(item.budgetnumber) || 0;\r\n        }\r\n  \r\n        cumulativeData.push({\r\n          month: month,\r\n          totalBudget: totalBudget,\r\n          totalCapacity: totalCapacity,\r\n        });\r\n      }\r\n  \r\n      //console.log('cumulativeData', cumulativeData);\r\n  \r\n      const chartData = {\r\n        labels: cumulativeData.map(item => item.month),\r\n        datasets: [\r\n          {\r\n            label: 'Cumulative Actual Budget',\r\n            borderColor: '#ff6384',\r\n            data: cumulativeData.map(item => item.totalBudget),\r\n            fill: false,\r\n          },\r\n          {\r\n            label: 'Cumulative Budget',\r\n            borderColor: '#36a2eb',\r\n            data: cumulativeData.map(item => item.totalCapacity),\r\n            fill: false,\r\n          },\r\n        ],\r\n      };\r\n  \r\n      lineCanvas.chart = new Chart(lineCtx, {\r\n        type: 'line',\r\n        data: chartData,\r\n        options: {\r\n          scales: {\r\n            x: {\r\n              type: 'category',\r\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n            },\r\n            y: {\r\n              type: 'linear',\r\n              position: 'left',\r\n            },\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating line chart: ', error);\r\n    }\r\n  };\r\n\r\n  const createBubbleChart = async () => {\r\n  const monthNames = [\r\n    'January', 'February', 'March', 'April',\r\n    'May', 'June', 'July', 'August',\r\n    'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  const bubbleCanvas = bubbleCanvasRef.current;\r\n\r\n  if (!bubbleCanvas) {\r\n    console.error('Bubble Canvas element not found');\r\n    return;\r\n  }\r\n\r\n  const bubbleCtx = bubbleCanvas.getContext('2d');\r\n  if (!bubbleCtx) {\r\n    console.error('Unable to get 2D context for bubble canvas');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Destroy existing chart instance\r\n    if (bubbleCanvas.chart) {\r\n      bubbleCanvas.chart.destroy();\r\n    }\r\n\r\n    // Create a new canvas element\r\n    const newBubbleCanvas = document.createElement('canvas');\r\n    bubbleCanvas.parentNode.replaceChild(newBubbleCanvas, bubbleCanvas);\r\n    bubbleCanvasRef.current = newBubbleCanvas;\r\n\r\n    const newBubbleCtx = newBubbleCanvas.getContext('2d');\r\n    if (!newBubbleCtx) {\r\n      console.error('Unable to get 2D context for the new bubble canvas');\r\n      return;\r\n    }\r\n\r\n    const cumulativeData = [];\r\n\r\n    // Fetch data for each month and sum the budgetnumber and capacitynumber values\r\n    for (let month = 1; month <= 12; month++) {\r\n      try {\r\n        const budgetsResponse = await apiService.get(`/budgets/getAllBudgets/${month}`, authtoken);\r\n        const capacityResponse = await apiService.get(`/budgets/capacity/${month}`, authtoken);\r\n\r\n        const budgetData = budgetsResponse.data || [];\r\n        const capacityData = capacityResponse.data || [];\r\n\r\n        let totalBudget = 0;\r\n        let totalCapacity = 0;\r\n\r\n        for (const item of budgetData) {\r\n          totalBudget += Number(item.budgetnumber) || 0;\r\n        }\r\n\r\n        for (const item of capacityData) {\r\n          totalCapacity += Number(item.budgetnumber) || 0;\r\n        }\r\n\r\n        cumulativeData.push({\r\n          month: month,\r\n          monthName: monthNames[month - 1],\r\n          totalBudget: totalBudget,\r\n          totalCapacity: totalCapacity,\r\n        });\r\n      } catch (error) {\r\n        console.error(`Error fetching data for month ${month}: `, error);\r\n      }\r\n    }\r\n\r\n    const bubbleData = cumulativeData.map(item => ({\r\n      month: item.month,\r\n      monthName: item.monthName,\r\n      totalBudget: item.totalBudget,\r\n      totalCapacity: item.totalCapacity,\r\n      // Add a new property for the size of the bubble\r\n      bubbleSize: calculateBubbleSize(item.totalBudget, item.totalCapacity),\r\n    }));\r\n\r\n    console.log('bubbleChartData:', bubbleData);\r\n\r\n    newBubbleCanvas.chart = new Chart(newBubbleCtx, {\r\n      type: 'bubble',\r\n      data: {\r\n        datasets: [\r\n          {\r\n            label: 'Budget',\r\n            backgroundColor: '#36a2eb', // Set the color for total budget bubbles\r\n            data: bubbleData.map(item => ({\r\n              x: item.month,\r\n              y: item.totalBudget,\r\n              r: item.bubbleSize,\r\n              monthName: item.monthName,\r\n            })),\r\n          },\r\n          {\r\n            label: 'Actual Expenditure',\r\n            backgroundColor: '#ff6384', // Set the color for total capacity bubbles\r\n            data: bubbleData.map(item => ({\r\n              x: item.month,\r\n              y: item.totalCapacity,\r\n              r: item.bubbleSize,\r\n              monthName: item.monthName,\r\n            })),\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: (tooltipItem, data) => {\r\n              const datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n              const value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].y;\r\n              const monthName = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].monthName;\r\n              return `${datasetLabel}: ${value} for ${monthName}`;\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating bubble chart: ', error);\r\n  }\r\n};\r\n\r\n  \r\n  \r\n  \r\n  const calculateBubbleSize = (totalBudget, totalCapacity) => {\r\n    // Your logic to calculate bubble size based on totalBudget and totalCapacity\r\n    // Here's a simple example, you can customize it based on your needs\r\n    console.log('totalBudget', totalBudget);\r\n    console.log('totalCapacity', totalCapacity);\r\n    const percentageSpent = (totalCapacity / totalBudget) * 4;\r\n    const bubbleSize = Math.max(10, percentageSpent); // Adjust the scale as needed\r\n    return bubbleSize;\r\n  };\r\n  \r\n\r\n  const handleMonthChange = (event) => {\r\n    setSelectedMonth(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"budget-chart\">\r\n      <h3>Various Types of Budget Charts</h3>\r\n      <div className=\"label-container\">\r\n        <select value={selectedMonth} onChange={handleMonthChange}>\r\n          <option value=\"\">All Months</option>\r\n          <option value=\"1\">January</option>\r\n          <option value=\"2\">February</option>\r\n          <option value=\"3\">March</option>\r\n          <option value=\"4\">April</option>\r\n          <option value=\"5\">May</option>\r\n          <option value=\"6\">June</option>\r\n          <option value=\"7\">July</option>\r\n          <option value=\"8\">August</option>\r\n          <option value=\"9\">September</option>\r\n          <option value=\"10\">October</option>\r\n          <option value=\"11\">November</option>\r\n          <option value=\"12\">December</option>\r\n        </select>\r\n      </div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"scrollable-container\">\r\n          <div className=\"charts-container\">\r\n            <div className=\"chart\">\r\n              <h3>Actual Expenditure vs Budget</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-canvas\" ref={barChartCanvasRef} width={800} height={800}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n            <div className=\"chart\">\r\n              <h3>Actual Expenditure Graph</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-pie-canvas\" ref={pieChartCanvasRef} width={800} height={800}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n          </div>\r\n          <div className=\"charts-container\">\r\n            <div className=\"chart2\">\r\n              <h3>Month, Actual Expenditure, Budget Capacity Index</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-bubble-canvas\" ref={bubbleChartCanvasRef} width={800} height={800}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n            <div className=\"chart2\">\r\n              <h3>Actual budget vs Cumulative budget</h3>\r\n              {budgetData.length > 0 && budgetCapacity.length > 0 && (\r\n                <canvas className=\"budget-line-canvas\" ref={lineChartCanvasRef} width={800} height={800}></canvas>\r\n              )}\r\n              {budgetData.length === 0 && budgetCapacity.length > 0 && <p>No budget data available.</p>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetChart;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,iBAAiB,GAAGR,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMS,iBAAiB,GAAGT,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMU,kBAAkB,GAAGV,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMW,oBAAoB,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEzC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMqB,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MAC3C,IAAI;QACF,MAAMC,cAAc,GAAGT,aAAa,GAC/B,0BAAyBA,aAAc,EAAC,GACzC,wBAAwB;QAE5B,MAAMU,gBAAgB,GAAGV,aAAa,GACjC,qBAAoBA,aAAc,EAAC,GACpC,mBAAmB;QAEvB,MAAM,CAACW,cAAc,EAAEC,gBAAgB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC3DxB,UAAU,CAACyB,GAAG,CAACN,cAAc,EAAEf,SAAS,EAAE;UACxCsB,MAAM,EAAE;YAAEC,KAAK,EAAEC,QAAQ,CAAClB,aAAa,EAAE,EAAE;UAAE;QAC/C,CAAC,CAAC,EACFV,UAAU,CAACyB,GAAG,CAACL,gBAAgB,EAAEhB,SAAS,CAAC,CAC5C,CAAC;QAEF,MAAMU,UAAU,GAAGO,cAAc,CAACQ,IAAI,IAAI,EAAE;QAC5C,MAAMC,YAAY,GAAGR,gBAAgB,CAACO,IAAI,IAAI,EAAE;QAEhDd,aAAa,CAACD,UAAU,CAAC;QACzBG,iBAAiB,CAACa,YAAY,CAAC;QAC/BjB,UAAU,CAAC,KAAK,CAAC;;QAEjB;QACAkB,cAAc,CAAC,CAAC;QAChBxB,iBAAiB,CAAC,CAAC;QACnByB,eAAe,CAAC,CAAC;QACjBC,iBAAiB,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDrB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACd,SAAS,EAAEM,aAAa,CAAC,CAAC;EAE9Bb,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,OAAO,EAAE;MACZmB,cAAc,CAAC,CAAC;MAChBK,cAAc,CAAC,CAAC;MAChBJ,eAAe,CAAC,CAAC;MACjBC,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACrB,OAAO,EAAEE,UAAU,EAAEE,cAAc,CAAC,CAAC;EAEzC,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMM,MAAM,GAAG/B,iBAAiB,CAACgC,OAAO;IAExC,IAAI,CAACD,MAAM,EAAE;MACXF,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAC;MACnD;IACF;IAEA,MAAMK,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,IAAI,CAACD,GAAG,EAAE;MACRJ,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAC;MAC9D;IACF;IAEA,IAAI;MACF,IAAIG,MAAM,CAACI,KAAK,EAAE;QAChBJ,MAAM,CAACI,KAAK,CAACC,OAAO,CAAC,CAAC;MACxB;MAEA,MAAMC,YAAY,GAAG7B,UAAU,CAAC8B,GAAG,CAACC,QAAQ,IAAI;QAC9C,MAAMC,gBAAgB,GAAG9B,cAAc,CAAC+B,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACC,UAAU,KAAKJ,QAAQ,CAACI,UAAU,CAAC;QAC7G,OAAO;UACLC,UAAU,EAAEL,QAAQ,CAACI,UAAU;UAC/BE,iBAAiB,EAAEN,QAAQ,CAACO,YAAY;UACxCpC,cAAc,EAAE8B,gBAAgB,GAAGA,gBAAgB,CAACM,YAAY,GAAG;QACrE,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,SAAS,GAAG;QAChBC,MAAM,EAAEX,YAAY,CAACC,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACL,UAAU,CAAC;QACjDM,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,oBAAoB;UAC3BC,eAAe,EAAE,SAAS;UAC1B7B,IAAI,EAAEc,YAAY,CAACC,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACJ,iBAAiB;QACvD,CAAC,EACD;UACEM,KAAK,EAAE,QAAQ;UACfC,eAAe,EAAE,SAAS;UAC1B7B,IAAI,EAAEc,YAAY,CAACC,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACvC,cAAc;QACpD,CAAC;MAEL,CAAC;MAEDmB,OAAO,CAACwB,GAAG,CAAC,iBAAiB,EAAEN,SAAS,CAAC;MAEzChB,MAAM,CAACI,KAAK,GAAG,IAAI1C,KAAK,CAACwC,GAAG,EAAE;QAC5BqB,IAAI,EAAE,KAAK;QACX/B,IAAI,EAAEwB,SAAS;QACfQ,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cAAEC,OAAO,EAAE;YAAM,CAAC;YACrBC,CAAC,EAAE;cAAED,OAAO,EAAE;YAAM;UACtB;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;;EAEA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAM8B,SAAS,GAAGC,YAAY,CAAC7B,OAAO;IAEtC,IAAI,CAAC4B,SAAS,EAAE;MACd/B,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;MAC7C;IACF;IAEA,MAAMkC,MAAM,GAAGF,SAAS,CAAC1B,UAAU,CAAC,IAAI,CAAC;IACzC,IAAI,CAAC4B,MAAM,EAAE;MACXjC,OAAO,CAACD,KAAK,CAAC,yCAAyC,CAAC;MACxD;IACF;IAEA,IAAI;MACF,IAAIgC,SAAS,CAACzB,KAAK,EAAE;QACnByB,SAAS,CAACzB,KAAK,CAACC,OAAO,CAAC,CAAC;MAC3B;MAEA,MAAMC,YAAY,GAAG7B,UAAU,CAAC8B,GAAG,CAACC,QAAQ,IAAI;QAC9C,MAAMC,gBAAgB,GAAG9B,cAAc,CAAC+B,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACC,UAAU,KAAKJ,QAAQ,CAACI,UAAU,CAAC;QAC7G,OAAO;UACLA,UAAU,EAAEJ,QAAQ,CAACI,UAAU;UAC/BE,iBAAiB,EAAEN,QAAQ,CAACO,YAAY;UACxCpC,cAAc,EAAE8B,gBAAgB,GAAGA,gBAAgB,CAACM,YAAY,GAAG;QACrE,CAAC;MACH,CAAC,CAAC;MAEF,MAAMiB,OAAO,GAAG1B,YAAY,CAACC,GAAG,CAAC,CAACW,IAAI,EAAEe,KAAK,KAAK;QAChD,MAAMnB,iBAAiB,GAAGI,IAAI,CAACJ,iBAAiB,IAAI,CAAC;QACrD,MAAMnC,cAAc,GAAGuC,IAAI,CAACvC,cAAc,IAAI,CAAC;QAC/C,MAAMuD,eAAe,GAAGvD,cAAc,GAAGmC,iBAAiB;QAE1D,MAAMqB,gBAAgB,GAAG,CACvB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC5G,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAC7G;QAED,OAAO;UACLf,KAAK,EAAEF,IAAI,CAACN,UAAU;UACtBpB,IAAI,EAAE,CAACsB,iBAAiB,EAAEoB,eAAe,CAAC;UAC1Cb,eAAe,EAAEc,gBAAgB,CAACF,KAAK,GAAGE,gBAAgB,CAACC,MAAM;QACnE,CAAC;MACH,CAAC,CAAC;MAEFtC,OAAO,CAACwB,GAAG,CAAC,eAAe,EAAEU,OAAO,CAAC;MAErCH,SAAS,CAACzB,KAAK,GAAG,IAAI1C,KAAK,CAACqE,MAAM,EAAE;QAClCR,IAAI,EAAE,KAAK;QACX/B,IAAI,EAAE;UACJyB,MAAM,EAAEe,OAAO,CAACzB,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACE,KAAK,CAAC;UACvCD,QAAQ,EAAE,CAAC;YACT3B,IAAI,EAAEwC,OAAO,CAACzB,GAAG,CAACW,IAAI,IAAIA,IAAI,CAAC1B,IAAI,CAAC,CAAC,CAAC,CAAC;YACvC6B,eAAe,EAAEW,OAAO,CAACzB,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACG,eAAe;UAC3D,CAAC;QACH;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMF,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAM0C,UAAU,GAAGC,aAAa,CAACrC,OAAO;IAExC,IAAI,CAACoC,UAAU,EAAE;MACfvC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAC;MAC9C;IACF;IAEA,MAAM0C,OAAO,GAAGF,UAAU,CAAClC,UAAU,CAAC,IAAI,CAAC;IAC3C,IAAI,CAACoC,OAAO,EAAE;MACZzC,OAAO,CAACD,KAAK,CAAC,0CAA0C,CAAC;MACzD;IACF;IAEA,IAAI;MACF,IAAIwC,UAAU,CAACjC,KAAK,EAAE;QACpBiC,UAAU,CAACjC,KAAK,CAACC,OAAO,CAAC,CAAC;MAC5B;MAEA,MAAMmC,cAAc,GAAG,EAAE;;MAEzB;MACA,KAAK,IAAIlD,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAI,EAAE,EAAEA,KAAK,EAAE,EAAE;QACxC,MAAMmD,eAAe,GAAG,MAAM9E,UAAU,CAACyB,GAAG,CAAE,0BAAyBE,KAAM,EAAC,EAAEoD,SAAS,CAAC;QAC1F,MAAMzD,gBAAgB,GAAG,MAAMtB,UAAU,CAACyB,GAAG,CAAE,qBAAoBE,KAAM,EAAC,EAAEoD,SAAS,CAAC;QAEtF,MAAMjE,UAAU,GAAGgE,eAAe,CAACjD,IAAI,IAAI,EAAE;QAC7C,MAAMC,YAAY,GAAGR,gBAAgB,CAACO,IAAI,IAAI,EAAE;QAEhD,IAAImD,WAAW,GAAG,CAAC;QACnB,IAAIC,aAAa,GAAG,CAAC;QAErB,KAAK,MAAM1B,IAAI,IAAIzC,UAAU,EAAE;UAC7BkE,WAAW,IAAIE,MAAM,CAAC3B,IAAI,CAACH,YAAY,CAAC,IAAI,CAAC;QAC/C;QAEA,KAAK,MAAMG,IAAI,IAAIzB,YAAY,EAAE;UAC/BmD,aAAa,IAAIC,MAAM,CAAC3B,IAAI,CAACH,YAAY,CAAC,IAAI,CAAC;QACjD;QAEAyB,cAAc,CAACM,IAAI,CAAC;UAClBxD,KAAK,EAAEA,KAAK;UACZqD,WAAW,EAAEA,WAAW;UACxBC,aAAa,EAAEA;QACjB,CAAC,CAAC;MACJ;;MAEA;;MAEA,MAAM5B,SAAS,GAAG;QAChBC,MAAM,EAAEuB,cAAc,CAACjC,GAAG,CAACW,IAAI,IAAIA,IAAI,CAAC5B,KAAK,CAAC;QAC9C6B,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,0BAA0B;UACjC2B,WAAW,EAAE,SAAS;UACtBvD,IAAI,EAAEgD,cAAc,CAACjC,GAAG,CAACW,IAAI,IAAIA,IAAI,CAACyB,WAAW,CAAC;UAClDK,IAAI,EAAE;QACR,CAAC,EACD;UACE5B,KAAK,EAAE,mBAAmB;UAC1B2B,WAAW,EAAE,SAAS;UACtBvD,IAAI,EAAEgD,cAAc,CAACjC,GAAG,CAACW,IAAI,IAAIA,IAAI,CAAC0B,aAAa,CAAC;UACpDI,IAAI,EAAE;QACR,CAAC;MAEL,CAAC;MAEDX,UAAU,CAACjC,KAAK,GAAG,IAAI1C,KAAK,CAAC6E,OAAO,EAAE;QACpChB,IAAI,EAAE,MAAM;QACZ/B,IAAI,EAAEwB,SAAS;QACfQ,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDH,IAAI,EAAE,UAAU;cAChBN,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU;YACnI,CAAC;YACDW,CAAC,EAAE;cACDL,IAAI,EAAE,QAAQ;cACd0B,QAAQ,EAAE;YACZ;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOpD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAMD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMsD,UAAU,GAAG,CACjB,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EACvC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAC/B,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAC/C;IAED,MAAMC,YAAY,GAAGC,eAAe,CAACnD,OAAO;IAE5C,IAAI,CAACkD,YAAY,EAAE;MACjBrD,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;MAChD;IACF;IAEA,MAAMwD,SAAS,GAAGF,YAAY,CAAChD,UAAU,CAAC,IAAI,CAAC;IAC/C,IAAI,CAACkD,SAAS,EAAE;MACdvD,OAAO,CAACD,KAAK,CAAC,4CAA4C,CAAC;MAC3D;IACF;IAEA,IAAI;MACF;MACA,IAAIsD,YAAY,CAAC/C,KAAK,EAAE;QACtB+C,YAAY,CAAC/C,KAAK,CAACC,OAAO,CAAC,CAAC;MAC9B;;MAEA;MACA,MAAMiD,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MACxDL,YAAY,CAACM,UAAU,CAACC,YAAY,CAACJ,eAAe,EAAEH,YAAY,CAAC;MACnEC,eAAe,CAACnD,OAAO,GAAGqD,eAAe;MAEzC,MAAMK,YAAY,GAAGL,eAAe,CAACnD,UAAU,CAAC,IAAI,CAAC;MACrD,IAAI,CAACwD,YAAY,EAAE;QACjB7D,OAAO,CAACD,KAAK,CAAC,oDAAoD,CAAC;QACnE;MACF;MAEA,MAAM2C,cAAc,GAAG,EAAE;;MAEzB;MACA,KAAK,IAAIlD,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAI,EAAE,EAAEA,KAAK,EAAE,EAAE;QACxC,IAAI;UACF,MAAMmD,eAAe,GAAG,MAAM9E,UAAU,CAACyB,GAAG,CAAE,0BAAyBE,KAAM,EAAC,EAAEoD,SAAS,CAAC;UAC1F,MAAMzD,gBAAgB,GAAG,MAAMtB,UAAU,CAACyB,GAAG,CAAE,qBAAoBE,KAAM,EAAC,EAAEoD,SAAS,CAAC;UAEtF,MAAMjE,UAAU,GAAGgE,eAAe,CAACjD,IAAI,IAAI,EAAE;UAC7C,MAAMC,YAAY,GAAGR,gBAAgB,CAACO,IAAI,IAAI,EAAE;UAEhD,IAAImD,WAAW,GAAG,CAAC;UACnB,IAAIC,aAAa,GAAG,CAAC;UAErB,KAAK,MAAM1B,IAAI,IAAIzC,UAAU,EAAE;YAC7BkE,WAAW,IAAIE,MAAM,CAAC3B,IAAI,CAACH,YAAY,CAAC,IAAI,CAAC;UAC/C;UAEA,KAAK,MAAMG,IAAI,IAAIzB,YAAY,EAAE;YAC/BmD,aAAa,IAAIC,MAAM,CAAC3B,IAAI,CAACH,YAAY,CAAC,IAAI,CAAC;UACjD;UAEAyB,cAAc,CAACM,IAAI,CAAC;YAClBxD,KAAK,EAAEA,KAAK;YACZsE,SAAS,EAAEV,UAAU,CAAC5D,KAAK,GAAG,CAAC,CAAC;YAChCqD,WAAW,EAAEA,WAAW;YACxBC,aAAa,EAAEA;UACjB,CAAC,CAAC;QACJ,CAAC,CAAC,OAAO/C,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAE,iCAAgCP,KAAM,IAAG,EAAEO,KAAK,CAAC;QAClE;MACF;MAEA,MAAMgE,UAAU,GAAGrB,cAAc,CAACjC,GAAG,CAACW,IAAI,KAAK;QAC7C5B,KAAK,EAAE4B,IAAI,CAAC5B,KAAK;QACjBsE,SAAS,EAAE1C,IAAI,CAAC0C,SAAS;QACzBjB,WAAW,EAAEzB,IAAI,CAACyB,WAAW;QAC7BC,aAAa,EAAE1B,IAAI,CAAC0B,aAAa;QACjC;QACAkB,UAAU,EAAEC,mBAAmB,CAAC7C,IAAI,CAACyB,WAAW,EAAEzB,IAAI,CAAC0B,aAAa;MACtE,CAAC,CAAC,CAAC;MAEH9C,OAAO,CAACwB,GAAG,CAAC,kBAAkB,EAAEuC,UAAU,CAAC;MAE3CP,eAAe,CAAClD,KAAK,GAAG,IAAI1C,KAAK,CAACiG,YAAY,EAAE;QAC9CpC,IAAI,EAAE,QAAQ;QACd/B,IAAI,EAAE;UACJ2B,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,QAAQ;YACfC,eAAe,EAAE,SAAS;YAAE;YAC5B7B,IAAI,EAAEqE,UAAU,CAACtD,GAAG,CAACW,IAAI,KAAK;cAC5BQ,CAAC,EAAER,IAAI,CAAC5B,KAAK;cACbsC,CAAC,EAAEV,IAAI,CAACyB,WAAW;cACnBqB,CAAC,EAAE9C,IAAI,CAAC4C,UAAU;cAClBF,SAAS,EAAE1C,IAAI,CAAC0C;YAClB,CAAC,CAAC;UACJ,CAAC,EACD;YACExC,KAAK,EAAE,oBAAoB;YAC3BC,eAAe,EAAE,SAAS;YAAE;YAC5B7B,IAAI,EAAEqE,UAAU,CAACtD,GAAG,CAACW,IAAI,KAAK;cAC5BQ,CAAC,EAAER,IAAI,CAAC5B,KAAK;cACbsC,CAAC,EAAEV,IAAI,CAAC0B,aAAa;cACrBoB,CAAC,EAAE9C,IAAI,CAAC4C,UAAU;cAClBF,SAAS,EAAE1C,IAAI,CAAC0C;YAClB,CAAC,CAAC;UACJ,CAAC;QAEL,CAAC;QACDpC,OAAO,EAAE;UACPyC,QAAQ,EAAE;YACRC,SAAS,EAAE;cACT9C,KAAK,EAAEA,CAAC+C,WAAW,EAAE3E,IAAI,KAAK;gBAC5B,MAAM4E,YAAY,GAAG5E,IAAI,CAAC2B,QAAQ,CAACgD,WAAW,CAACE,YAAY,CAAC,CAACjD,KAAK,IAAI,EAAE;gBACxE,MAAMkD,KAAK,GAAG9E,IAAI,CAAC2B,QAAQ,CAACgD,WAAW,CAACE,YAAY,CAAC,CAAC7E,IAAI,CAAC2E,WAAW,CAAClC,KAAK,CAAC,CAACL,CAAC;gBAC/E,MAAMgC,SAAS,GAAGpE,IAAI,CAAC2B,QAAQ,CAACgD,WAAW,CAACE,YAAY,CAAC,CAAC7E,IAAI,CAAC2E,WAAW,CAAClC,KAAK,CAAC,CAAC2B,SAAS;gBAC3F,OAAQ,GAAEQ,YAAa,KAAIE,KAAM,QAAOV,SAAU,EAAC;cACrD;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO/D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAKC,MAAMkE,mBAAmB,GAAGA,CAACpB,WAAW,EAAEC,aAAa,KAAK;IAC1D;IACA;IACA9C,OAAO,CAACwB,GAAG,CAAC,aAAa,EAAEqB,WAAW,CAAC;IACvC7C,OAAO,CAACwB,GAAG,CAAC,eAAe,EAAEsB,aAAa,CAAC;IAC3C,MAAM2B,eAAe,GAAI3B,aAAa,GAAGD,WAAW,GAAI,CAAC;IACzD,MAAMmB,UAAU,GAAGU,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEF,eAAe,CAAC,CAAC,CAAC;IAClD,OAAOT,UAAU;EACnB,CAAC;EAGD,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnCrG,gBAAgB,CAACqG,KAAK,CAACC,MAAM,CAACN,KAAK,CAAC;EACtC,CAAC;EAED,oBACEzG,OAAA;IAAKgH,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BjH,OAAA;MAAAiH,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCrH,OAAA;MAAKgH,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BjH,OAAA;QAAQyG,KAAK,EAAEjG,aAAc;QAAC8G,QAAQ,EAAET,iBAAkB;QAAAI,QAAA,gBACxDjH,OAAA;UAAQyG,KAAK,EAAC,EAAE;UAAAQ,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpCrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChCrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChCrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9BrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/BrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/BrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjCrH,OAAA;UAAQyG,KAAK,EAAC,GAAG;UAAAQ,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpCrH,OAAA;UAAQyG,KAAK,EAAC,IAAI;UAAAQ,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCrH,OAAA;UAAQyG,KAAK,EAAC,IAAI;UAAAQ,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpCrH,OAAA;UAAQyG,KAAK,EAAC,IAAI;UAAAQ,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACL3G,OAAO,gBACNV,OAAA;MAAAiH,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBrH,OAAA;MAAKgH,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCjH,OAAA;QAAKgH,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BjH,OAAA;UAAKgH,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACpBjH,OAAA;YAAAiH,QAAA,EAAI;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACpCzG,UAAU,CAAC2D,MAAM,GAAG,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBACjDvE,OAAA;YAAQgH,SAAS,EAAC,eAAe;YAACO,GAAG,EAAEnH,iBAAkB;YAACoH,KAAK,EAAE,GAAI;YAACC,MAAM,EAAE;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAC5F,EACAzG,UAAU,CAAC2D,MAAM,KAAK,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBAAIvE,OAAA;YAAAiH,QAAA,EAAG;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC,eACNrH,OAAA;UAAKgH,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACpBjH,OAAA;YAAAiH,QAAA,EAAI;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAChCzG,UAAU,CAAC2D,MAAM,GAAG,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBACjDvE,OAAA;YAAQgH,SAAS,EAAC,mBAAmB;YAACO,GAAG,EAAElH,iBAAkB;YAACmH,KAAK,EAAE,GAAI;YAACC,MAAM,EAAE;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAChG,EACAzG,UAAU,CAAC2D,MAAM,KAAK,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBAAIvE,OAAA;YAAAiH,QAAA,EAAG;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNrH,OAAA;QAAKgH,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BjH,OAAA;UAAKgH,SAAS,EAAC,QAAQ;UAAAC,QAAA,gBACrBjH,OAAA;YAAAiH,QAAA,EAAI;UAAgD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACxDzG,UAAU,CAAC2D,MAAM,GAAG,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBACjDvE,OAAA;YAAQgH,SAAS,EAAC,sBAAsB;YAACO,GAAG,EAAEhH,oBAAqB;YAACiH,KAAK,EAAE,GAAI;YAACC,MAAM,EAAE;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CACtG,EACAzG,UAAU,CAAC2D,MAAM,KAAK,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBAAIvE,OAAA;YAAAiH,QAAA,EAAG;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC,eACNrH,OAAA;UAAKgH,SAAS,EAAC,QAAQ;UAAAC,QAAA,gBACrBjH,OAAA;YAAAiH,QAAA,EAAI;UAAkC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC1CzG,UAAU,CAAC2D,MAAM,GAAG,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBACjDvE,OAAA;YAAQgH,SAAS,EAAC,oBAAoB;YAACO,GAAG,EAAEjH,kBAAmB;YAACkH,KAAK,EAAE,GAAI;YAACC,MAAM,EAAE;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAClG,EACAzG,UAAU,CAAC2D,MAAM,KAAK,CAAC,IAAIzD,cAAc,CAACyD,MAAM,GAAG,CAAC,iBAAIvE,OAAA;YAAAiH,QAAA,EAAG;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClH,EAAA,CA3dIF,WAAW;AAAAyH,EAAA,GAAXzH,WAAW;AA6djB,eAAeA,WAAW;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}